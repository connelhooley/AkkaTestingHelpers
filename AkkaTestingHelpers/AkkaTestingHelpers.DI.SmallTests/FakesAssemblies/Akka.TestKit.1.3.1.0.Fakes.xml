<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Akka.TestKit.1.3.1.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Akka.TestKit.Configs.Fakes.ShimTestConfigs">
            <summary>Shim type of Akka.TestKit.Configs.TestConfigs</summary>
        </member>
        <member name="M:Akka.TestKit.Configs.Fakes.ShimTestConfigs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Configs.Fakes.ShimTestConfigs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Configs.Fakes.ShimTestConfigs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Configs.Fakes.ShimTestConfigs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Configs.Fakes.ShimTestConfigs.DefaultConfigGet">
            <summary>Sets the shim of TestConfigs.get_DefaultConfig()</summary>
        </member>
        <member name="P:Akka.TestKit.Configs.Fakes.ShimTestConfigs.TestSchedulerConfigGet">
            <summary>Sets the shim of TestConfigs.get_TestSchedulerConfig()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimAutoPilot">
            <summary>Shim type of Akka.TestKit.AutoPilot</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimAutoPilot.#ctor(Akka.TestKit.AutoPilot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimAutoPilot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimAutoPilot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimAutoPilot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimAutoPilot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimAutoPilot.Constructor">
            <summary>Sets the shim of AutoPilot.AutoPilot()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimAutoPilot.KeepRunningGet">
            <summary>Sets the shim of AutoPilot.get_KeepRunning()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimAutoPilot.NoAutoPilotGet">
            <summary>Sets the shim of AutoPilot.get_NoAutoPilot()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimCallingThreadDispatcher">
            <summary>Shim type of Akka.TestKit.CallingThreadDispatcher</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimCallingThreadDispatcher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimCallingThreadDispatcher.#ctor(Akka.TestKit.CallingThreadDispatcher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimCallingThreadDispatcher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimCallingThreadDispatcher.AllInstances.ExecuteTaskIRunnable">
            <summary>Sets the shim of CallingThreadDispatcher.ExecuteTask(IRunnable run)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimCallingThreadDispatcher.AllInstances.Shutdown">
            <summary>Sets the shim of CallingThreadDispatcher.Shutdown()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimCallingThreadDispatcher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimCallingThreadDispatcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimCallingThreadDispatcher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimCallingThreadDispatcher.ConstructorMessageDispatcherConfigurator">
            <summary>Sets the shim of CallingThreadDispatcher.CallingThreadDispatcher(MessageDispatcherConfigurator configurator)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimCallingThreadDispatcher.ExecuteTaskIRunnable">
            <summary>Sets the shim of CallingThreadDispatcher.ExecuteTask(IRunnable run)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimCallingThreadDispatcher.Shutdown">
            <summary>Sets the shim of CallingThreadDispatcher.Shutdown()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimCallingThreadDispatcher.StaticConstructor">
            <summary>Sets the shim of CallingThreadDispatcher.CallingThreadDispatcher()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimCallingThreadDispatcherConfigurator">
            <summary>Shim type of Akka.TestKit.CallingThreadDispatcherConfigurator</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimCallingThreadDispatcherConfigurator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimCallingThreadDispatcherConfigurator.#ctor(Akka.TestKit.CallingThreadDispatcherConfigurator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimCallingThreadDispatcherConfigurator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimCallingThreadDispatcherConfigurator.AllInstances.Dispatcher">
            <summary>Sets the shim of CallingThreadDispatcherConfigurator.Dispatcher()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimCallingThreadDispatcherConfigurator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimCallingThreadDispatcherConfigurator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimCallingThreadDispatcherConfigurator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimCallingThreadDispatcherConfigurator.ConstructorConfigIDispatcherPrerequisites">
            <summary>Sets the shim of CallingThreadDispatcherConfigurator.CallingThreadDispatcherConfigurator(Config config, IDispatcherPrerequisites prerequisites)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimCallingThreadDispatcherConfigurator.Dispatcher">
            <summary>Sets the shim of CallingThreadDispatcherConfigurator.Dispatcher()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimDeadLettersFilter">
            <summary>Shim type of Akka.TestKit.DeadLettersFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimDeadLettersFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimDeadLettersFilter.#ctor(Akka.TestKit.DeadLettersFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimDeadLettersFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimDeadLettersFilter.AllInstances.FilterDescriptiveNameGet">
            <summary>Sets the shim of DeadLettersFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimDeadLettersFilter.AllInstances.IsMatchLogEvent">
            <summary>Sets the shim of DeadLettersFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimDeadLettersFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimDeadLettersFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimDeadLettersFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimDeadLettersFilter.Bind(Akka.TestKit.IEventFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimDeadLettersFilter.ConstructorIStringMatcherIStringMatcherPredicateOfDeadLetter">
            <summary>Sets the shim of DeadLettersFilter.DeadLettersFilter(IStringMatcher messageMatcher, IStringMatcher sourceMatcher, Predicate`1&lt;DeadLetter&gt; isMatch)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimDeadLettersFilter.FilterDescriptiveNameGet">
            <summary>Sets the shim of DeadLettersFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimDeadLettersFilter.IsMatchLogEvent">
            <summary>Sets the shim of DeadLettersFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimDelegateAutoPilot">
            <summary>Shim type of Akka.TestKit.DelegateAutoPilot</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimDelegateAutoPilot.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimDelegateAutoPilot.#ctor(Akka.TestKit.DelegateAutoPilot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimDelegateAutoPilot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimDelegateAutoPilot.AllInstances.RunIActorRefObject">
            <summary>Sets the shim of DelegateAutoPilot.Run(IActorRef sender, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimDelegateAutoPilot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimDelegateAutoPilot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimDelegateAutoPilot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimDelegateAutoPilot.ConstructorAutoPilotDelegate">
            <summary>Sets the shim of DelegateAutoPilot.DelegateAutoPilot(AutoPilotDelegate autoPilotDelegate)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimDelegateAutoPilot.RunIActorRefObject">
            <summary>Sets the shim of DelegateAutoPilot.Run(IActorRef sender, Object message)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimEventFilterFactory">
            <summary>Shim type of Akka.TestKit.EventFilterFactory</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimEventFilterFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimEventFilterFactory.#ctor(Akka.TestKit.EventFilterFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.CreateApplierEventFilterBaseActorSystem">
            <summary>Sets the shim of EventFilterFactory.CreateApplier(EventFilterBase filter, ActorSystem system)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.CustomOf1PredicateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.EventFilterFactory,System.Predicate{``0},Akka.TestKit.IEventFilterApplier})">
            <summary>Sets the shim of EventFilterFactory.Custom(Predicate`1&lt;!!0&gt; predicate)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.CustomPredicateOfLogEvent">
            <summary>Sets the shim of EventFilterFactory.Custom(Predicate`1&lt;LogEvent&gt; predicate)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.DeadLetter">
            <summary>Sets the shim of EventFilterFactory.DeadLetter()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.DeadLetterOf1FuncOfM0BooleanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.EventFilterFactory,System.Func{``0,System.Boolean},System.String,Akka.TestKit.IEventFilterApplier})">
            <summary>Sets the shim of EventFilterFactory.DeadLetter(Func`2&lt;!!0,Boolean&gt; isMatch, String source)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.DeadLetterOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.EventFilterFactory,System.String,Akka.TestKit.IEventFilterApplier})">
            <summary>Sets the shim of EventFilterFactory.DeadLetter(String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.DeadLetterPredicateOfDeadLetterString">
            <summary>Sets the shim of EventFilterFactory.DeadLetter(Predicate`1&lt;DeadLetter&gt; isMatch, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.DeadLetterTypeFuncOfObjectBooleanString">
            <summary>Sets the shim of EventFilterFactory.DeadLetter(Type type, Func`2&lt;Object,Boolean&gt; isMatch, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.DeadLetterTypeString">
            <summary>Sets the shim of EventFilterFactory.DeadLetter(Type type, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.DebugRegexString">
            <summary>Sets the shim of EventFilterFactory.Debug(Regex pattern, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.DebugStringStringStringString">
            <summary>Sets the shim of EventFilterFactory.Debug(String message, String start, String contains, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.ErrorRegexString">
            <summary>Sets the shim of EventFilterFactory.Error(Regex pattern, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.ErrorStringStringStringString">
            <summary>Sets the shim of EventFilterFactory.Error(String message, String start, String contains, String source)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.ExceptionOf1RegexString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.EventFilterFactory,System.Text.RegularExpressions.Regex,System.String,Akka.TestKit.IEventFilterApplier})">
            <summary>Sets the shim of EventFilterFactory.Exception(Regex pattern, String source)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.ExceptionOf1StringStringStringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.EventFilterFactory,System.String,System.String,System.String,System.String,Akka.TestKit.IEventFilterApplier})">
            <summary>Sets the shim of EventFilterFactory.Exception(String message, String start, String contains, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.ExceptionTypeIStringMatcherIStringMatcherBoolean">
            <summary>Sets the shim of EventFilterFactory.Exception(Type exceptionType, IStringMatcher messageMatcher, IStringMatcher sourceMatcher, Boolean checkInnerExceptions)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.ExceptionTypeRegexStringBoolean">
            <summary>Sets the shim of EventFilterFactory.Exception(Type exceptionType, Regex pattern, String source, Boolean checkInnerExceptions)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.ExceptionTypeStringStringStringStringBoolean">
            <summary>Sets the shim of EventFilterFactory.Exception(Type exceptionType, String message, String start, String contains, String source, Boolean checkInnerExceptions)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.ForLogLevelLogLevelRegexString">
            <summary>Sets the shim of EventFilterFactory.ForLogLevel(LogLevel logLevel, Regex pattern, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.ForLogLevelLogLevelStringStringStringString">
            <summary>Sets the shim of EventFilterFactory.ForLogLevel(LogLevel logLevel, String message, String start, String contains, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.InfoRegexString">
            <summary>Sets the shim of EventFilterFactory.Info(Regex pattern, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.InfoStringStringStringString">
            <summary>Sets the shim of EventFilterFactory.Info(String message, String start, String contains, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.WarningRegexString">
            <summary>Sets the shim of EventFilterFactory.Warning(Regex pattern, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.AllInstances.WarningStringStringStringString">
            <summary>Sets the shim of EventFilterFactory.Warning(String message, String start, String contains, String source)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimEventFilterFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimEventFilterFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.ConstructorTestKitBase">
            <summary>Sets the shim of EventFilterFactory.EventFilterFactory(TestKitBase testkit)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.ConstructorTestKitBaseActorSystem">
            <summary>Sets the shim of EventFilterFactory.EventFilterFactory(TestKitBase testkit, ActorSystem system)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.ConstructorTestKitBaseActorSystemIReadOnlyListOfEventFilterBase">
            <summary>Sets the shim of EventFilterFactory.EventFilterFactory(TestKitBase testkit, ActorSystem actorSystem, IReadOnlyList`1&lt;EventFilterBase&gt; filters)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.CreateApplierEventFilterBaseActorSystem">
            <summary>Sets the shim of EventFilterFactory.CreateApplier(EventFilterBase filter, ActorSystem system)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.CreateMessageMatcherStringStringString">
            <summary>Sets the shim of EventFilterFactory.CreateMessageMatcher(String message, String start, String contains)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimEventFilterFactory.CustomOf1PredicateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Predicate{``0},Akka.TestKit.IEventFilterApplier})">
            <summary>Sets the shim of EventFilterFactory.Custom(Predicate`1&lt;!!0&gt; predicate)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.CustomPredicateOfLogEvent">
            <summary>Sets the shim of EventFilterFactory.Custom(Predicate`1&lt;LogEvent&gt; predicate)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.DeadLetter">
            <summary>Sets the shim of EventFilterFactory.DeadLetter()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimEventFilterFactory.DeadLetterOf1FuncOfM0BooleanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0,System.Boolean},System.String,Akka.TestKit.IEventFilterApplier})">
            <summary>Sets the shim of EventFilterFactory.DeadLetter(Func`2&lt;!!0,Boolean&gt; isMatch, String source)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimEventFilterFactory.DeadLetterOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Akka.TestKit.IEventFilterApplier})">
            <summary>Sets the shim of EventFilterFactory.DeadLetter(String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.DeadLetterPredicateOfDeadLetterString">
            <summary>Sets the shim of EventFilterFactory.DeadLetter(Predicate`1&lt;DeadLetter&gt; isMatch, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.DeadLetterTypeFuncOfObjectBooleanString">
            <summary>Sets the shim of EventFilterFactory.DeadLetter(Type type, Func`2&lt;Object,Boolean&gt; isMatch, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.DeadLetterTypeString">
            <summary>Sets the shim of EventFilterFactory.DeadLetter(Type type, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.DebugRegexString">
            <summary>Sets the shim of EventFilterFactory.Debug(Regex pattern, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.DebugStringStringStringString">
            <summary>Sets the shim of EventFilterFactory.Debug(String message, String start, String contains, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.ErrorRegexString">
            <summary>Sets the shim of EventFilterFactory.Error(Regex pattern, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.ErrorStringStringStringString">
            <summary>Sets the shim of EventFilterFactory.Error(String message, String start, String contains, String source)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimEventFilterFactory.ExceptionOf1RegexString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Text.RegularExpressions.Regex,System.String,Akka.TestKit.IEventFilterApplier})">
            <summary>Sets the shim of EventFilterFactory.Exception(Regex pattern, String source)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimEventFilterFactory.ExceptionOf1StringStringStringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.String,System.String,Akka.TestKit.IEventFilterApplier})">
            <summary>Sets the shim of EventFilterFactory.Exception(String message, String start, String contains, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.ExceptionTypeIStringMatcherIStringMatcherBoolean">
            <summary>Sets the shim of EventFilterFactory.Exception(Type exceptionType, IStringMatcher messageMatcher, IStringMatcher sourceMatcher, Boolean checkInnerExceptions)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.ExceptionTypeRegexStringBoolean">
            <summary>Sets the shim of EventFilterFactory.Exception(Type exceptionType, Regex pattern, String source, Boolean checkInnerExceptions)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.ExceptionTypeStringStringStringStringBoolean">
            <summary>Sets the shim of EventFilterFactory.Exception(Type exceptionType, String message, String start, String contains, String source, Boolean checkInnerExceptions)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.ForLogLevelLogLevelRegexString">
            <summary>Sets the shim of EventFilterFactory.ForLogLevel(LogLevel logLevel, Regex pattern, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.ForLogLevelLogLevelStringStringStringString">
            <summary>Sets the shim of EventFilterFactory.ForLogLevel(LogLevel logLevel, String message, String start, String contains, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.InfoRegexString">
            <summary>Sets the shim of EventFilterFactory.Info(Regex pattern, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.InfoStringStringStringString">
            <summary>Sets the shim of EventFilterFactory.Info(String message, String start, String contains, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.WarningRegexString">
            <summary>Sets the shim of EventFilterFactory.Warning(Regex pattern, String source)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimEventFilterFactory.WarningStringStringStringString">
            <summary>Sets the shim of EventFilterFactory.Warning(String message, String start, String contains, String source)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimFSMSpecHelpers">
            <summary>Shim type of Akka.TestKit.FSMSpecHelpers</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimFSMSpecHelpers.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimFSMSpecHelpers.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimFSMSpecHelpers.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimFSMSpecHelpers.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimFSMSpecHelpers.CurrentStateExpectorOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Object,System.Object,System.Boolean}})">
            <summary>Sets the shim of FSMSpecHelpers.CurrentStateExpector()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimFSMSpecHelpers.TransitionStateExpectorOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Object,System.Object,System.Boolean}})">
            <summary>Sets the shim of FSMSpecHelpers.TransitionStateExpector()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimKeepRunning">
            <summary>Shim type of Akka.TestKit.KeepRunning</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimKeepRunning.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimKeepRunning.#ctor(Akka.TestKit.KeepRunning)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimKeepRunning.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimKeepRunning.AllInstances.RunIActorRefObject">
            <summary>Sets the shim of KeepRunning.Run(IActorRef sender, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimKeepRunning.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimKeepRunning.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimKeepRunning.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimKeepRunning.Constructor">
            <summary>Sets the shim of KeepRunning.KeepRunning()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimKeepRunning.RunIActorRefObject">
            <summary>Sets the shim of KeepRunning.Run(IActorRef sender, Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimKeepRunning.StaticConstructor">
            <summary>Sets the shim of KeepRunning.KeepRunning()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimMessageEnvelope">
            <summary>Shim type of Akka.TestKit.MessageEnvelope</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimMessageEnvelope.#ctor(Akka.TestKit.MessageEnvelope)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimMessageEnvelope.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimMessageEnvelope.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimMessageEnvelope.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimMessageEnvelope.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimMessageEnvelope.Constructor">
            <summary>Sets the shim of MessageEnvelope.MessageEnvelope()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimNoAutoPilot">
            <summary>Shim type of Akka.TestKit.NoAutoPilot</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimNoAutoPilot.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimNoAutoPilot.#ctor(Akka.TestKit.NoAutoPilot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimNoAutoPilot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimNoAutoPilot.AllInstances.RunIActorRefObject">
            <summary>Sets the shim of NoAutoPilot.Run(IActorRef sender, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimNoAutoPilot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimNoAutoPilot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimNoAutoPilot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimNoAutoPilot.Constructor">
            <summary>Sets the shim of NoAutoPilot.NoAutoPilot()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimNoAutoPilot.RunIActorRefObject">
            <summary>Sets the shim of NoAutoPilot.Run(IActorRef sender, Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimNoAutoPilot.StaticConstructor">
            <summary>Sets the shim of NoAutoPilot.NoAutoPilot()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimNullMessageEnvelope">
            <summary>Shim type of Akka.TestKit.NullMessageEnvelope</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimNullMessageEnvelope.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimNullMessageEnvelope.#ctor(Akka.TestKit.NullMessageEnvelope)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimNullMessageEnvelope.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimNullMessageEnvelope.AllInstances.MessageGet">
            <summary>Sets the shim of NullMessageEnvelope.get_Message()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimNullMessageEnvelope.AllInstances.SenderGet">
            <summary>Sets the shim of NullMessageEnvelope.get_Sender()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimNullMessageEnvelope.AllInstances.ToString01">
            <summary>Sets the shim of NullMessageEnvelope.ToString()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimNullMessageEnvelope.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimNullMessageEnvelope.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimNullMessageEnvelope.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimNullMessageEnvelope.Constructor">
            <summary>Sets the shim of NullMessageEnvelope.NullMessageEnvelope()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimNullMessageEnvelope.MessageGet">
            <summary>Sets the shim of NullMessageEnvelope.get_Message()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimNullMessageEnvelope.SenderGet">
            <summary>Sets the shim of NullMessageEnvelope.get_Sender()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimNullMessageEnvelope.StaticConstructor">
            <summary>Sets the shim of NullMessageEnvelope.NullMessageEnvelope()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimNullMessageEnvelope.ToString">
            <summary>Sets the shim of NullMessageEnvelope.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimRealMessageEnvelope">
            <summary>Shim type of Akka.TestKit.RealMessageEnvelope</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimRealMessageEnvelope.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimRealMessageEnvelope.#ctor(Akka.TestKit.RealMessageEnvelope)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimRealMessageEnvelope.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimRealMessageEnvelope.AllInstances.MessageGet">
            <summary>Sets the shim of RealMessageEnvelope.get_Message()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimRealMessageEnvelope.AllInstances.SenderGet">
            <summary>Sets the shim of RealMessageEnvelope.get_Sender()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimRealMessageEnvelope.AllInstances.ToString01">
            <summary>Sets the shim of RealMessageEnvelope.ToString()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimRealMessageEnvelope.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimRealMessageEnvelope.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimRealMessageEnvelope.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimRealMessageEnvelope.ConstructorObjectIActorRef">
            <summary>Sets the shim of RealMessageEnvelope.RealMessageEnvelope(Object message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimRealMessageEnvelope.MessageGet">
            <summary>Sets the shim of RealMessageEnvelope.get_Message()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimRealMessageEnvelope.SenderGet">
            <summary>Sets the shim of RealMessageEnvelope.get_Sender()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimRealMessageEnvelope.ToString">
            <summary>Sets the shim of RealMessageEnvelope.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestActor">
            <summary>Shim type of Akka.TestKit.TestActor</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.KeepRunningGet">
            <summary>Sets the shim of TestActor.get_KeepRunning()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.NoAutoPilotGet">
            <summary>Sets the shim of TestActor.get_NoAutoPilot()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.NullMessageGet">
            <summary>Sets the shim of TestActor.get_NullMessage()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestActor.ShimSetAutoPilot">
            <summary>Shim type of Akka.TestKit.TestActor+SetAutoPilot</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimSetAutoPilot.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimSetAutoPilot.#ctor(Akka.TestKit.TestActor.SetAutoPilot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestActor.ShimSetAutoPilot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimSetAutoPilot.AllInstances.AutoPilotGet">
            <summary>Sets the shim of SetAutoPilot.get_AutoPilot()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimSetAutoPilot.AutoPilotGet">
            <summary>Sets the shim of SetAutoPilot.get_AutoPilot()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimSetAutoPilot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimSetAutoPilot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimSetAutoPilot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimSetAutoPilot.Bind(Akka.Actor.INoSerializationVerificationNeeded)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimSetAutoPilot.ConstructorAutoPilot">
            <summary>Sets the shim of SetAutoPilot.SetAutoPilot(AutoPilot autoPilot)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestActor.ShimSetIgnore">
            <summary>Shim type of Akka.TestKit.TestActor+SetIgnore</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimSetIgnore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimSetIgnore.#ctor(Akka.TestKit.TestActor.SetIgnore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestActor.ShimSetIgnore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimSetIgnore.AllInstances.IgnoreGet">
            <summary>Sets the shim of SetIgnore.get_Ignore()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimSetIgnore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimSetIgnore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimSetIgnore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimSetIgnore.Bind(Akka.Actor.INoSerializationVerificationNeeded)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimSetIgnore.ConstructorTestActorIgnore">
            <summary>Sets the shim of SetIgnore.SetIgnore(Ignore ignore)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimSetIgnore.IgnoreGet">
            <summary>Sets the shim of SetIgnore.get_Ignore()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestActor.ShimUnwatch">
            <summary>Shim type of Akka.TestKit.TestActor+Unwatch</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimUnwatch.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimUnwatch.#ctor(Akka.TestKit.TestActor.Unwatch)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimUnwatch.ActorGet">
            <summary>Sets the shim of Unwatch.get_Actor()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestActor.ShimUnwatch.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimUnwatch.AllInstances.ActorGet">
            <summary>Sets the shim of Unwatch.get_Actor()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimUnwatch.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimUnwatch.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimUnwatch.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimUnwatch.Bind(Akka.Actor.INoSerializationVerificationNeeded)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimUnwatch.ConstructorIActorRef">
            <summary>Sets the shim of Unwatch.Unwatch(IActorRef actorToUnwatch)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestActor.ShimWatch">
            <summary>Shim type of Akka.TestKit.TestActor+Watch</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimWatch.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimWatch.#ctor(Akka.TestKit.TestActor.Watch)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimWatch.ActorGet">
            <summary>Sets the shim of Watch.get_Actor()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestActor.ShimWatch.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimWatch.AllInstances.ActorGet">
            <summary>Sets the shim of Watch.get_Actor()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimWatch.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimWatch.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimWatch.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActor.ShimWatch.Bind(Akka.Actor.INoSerializationVerificationNeeded)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActor.ShimWatch.ConstructorIActorRef">
            <summary>Sets the shim of Watch.Watch(IActorRef actorToWatch)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestActorRef`1">
            <summary>Shim type of Akka.TestKit.TestActorRef`1</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRef`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRef`1.#ctor(Akka.TestKit.TestActorRef{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestActorRef`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRef`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRef`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRef`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRef`1.Bind(Akka.Actor.IActorRef)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRef`1.Bind(Akka.Actor.IActorRefScope)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRef`1.Bind(Akka.Actor.ICanTell)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRef`1.Bind(Akka.Actor.IInternalActorRef)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRef`1.Bind(Akka.Util.ISurrogated)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRef`1.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRef`1.Bind(System.IComparable{Akka.Actor.IActorRef})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRef`1.Bind(System.IEquatable{Akka.Actor.IActorRef})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRef`1.ConstructorActorSystemPropsIActorRefString">
            <summary>Sets the shim of TestActorRef`1.TestActorRef`1(ActorSystem system, Props actorProps, IActorRef supervisor, String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRef`1.EqualityOpIActorRefTestActorRefOfT0">
            <summary>Sets the shim of TestActorRef`1.op_Equality(IActorRef actorRef, TestActorRef`1&lt;!0&gt; testActorRef)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRef`1.EqualityOpTestActorRefOfT0IActorRef">
            <summary>Sets the shim of TestActorRef`1.op_Equality(TestActorRef`1&lt;!0&gt; testActorRef, IActorRef actorRef)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRef`1.InequalityOpIActorRefTestActorRefOfT0">
            <summary>Sets the shim of TestActorRef`1.op_Inequality(IActorRef actorRef, TestActorRef`1&lt;!0&gt; testActorRef)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRef`1.InequalityOpTestActorRefOfT0IActorRef">
            <summary>Sets the shim of TestActorRef`1.op_Inequality(TestActorRef`1&lt;!0&gt; testActorRef, IActorRef actorRef)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestActorRefBase`1">
            <summary>Shim type of Akka.TestKit.TestActorRefBase`1</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRefBase`1.#ctor(Akka.TestKit.TestActorRefBase{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AkkaActorICanTellTellObjectIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.ICanTell.Tell(Object message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AkkaActorIInternalActorRefGetChildIEnumerableOfString">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.GetChild(IEnumerable`1&lt;String&gt; name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AkkaActorIInternalActorRefRestartException">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.Restart(Exception cause)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AkkaActorIInternalActorRefResumeException">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.Resume(Exception causedByFailure)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AkkaActorIInternalActorRefStart">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.Start()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AkkaActorIInternalActorRefStop">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.Stop()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AkkaActorIInternalActorRefSuspend">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.Suspend()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AkkaUtilISurrogatedToSurrogateActorSystem">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Util.ISurrogated.ToSurrogate(ActorSystem system)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.AkkaActorICanTellTellObjectIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.ICanTell.Tell(Object message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.AkkaActorIInternalActorRefGetChildIEnumerableOfString">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.GetChild(IEnumerable`1&lt;String&gt; name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.AkkaActorIInternalActorRefRestartException">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.Restart(Exception cause)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.AkkaActorIInternalActorRefResumeException">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.Resume(Exception causedByFailure)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.AkkaActorIInternalActorRefStart">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.Start()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.AkkaActorIInternalActorRefStop">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.Stop()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.AkkaActorIInternalActorRefSuspend">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.Suspend()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.AkkaUtilISurrogatedToSurrogateActorSystem">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Util.ISurrogated.ToSurrogate(ActorSystem system)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.CompareToObject">
            <summary>Sets the shim of TestActorRefBase`1.CompareTo(Object obj)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.EqualsIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.Equals(IActorRef other)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.EqualsObject">
            <summary>Sets the shim of TestActorRefBase`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.ForwardObject">
            <summary>Sets the shim of TestActorRefBase`1.Forward(Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of TestActorRefBase`1.GetHashCode()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.InternalRefGet">
            <summary>Sets the shim of TestActorRefBase`1.get_InternalRef()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.IsLocalAkkaActorIActorRefScopeget">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IActorRefScope.get_IsLocal()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.IsTerminatedAkkaActorIInternalActorRefget">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.get_IsTerminated()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.ParentAkkaActorIInternalActorRefget">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.get_Parent()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.PathAkkaActorIActorRefget">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IActorRef.get_Path()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.PathGet">
            <summary>Sets the shim of TestActorRefBase`1.get_Path()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.ProviderAkkaActorIInternalActorRefget">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.get_Provider()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.ReceiveObjectIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.Receive(Object message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.RefGet">
            <summary>Sets the shim of TestActorRefBase`1.get_Ref()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.SendSystemMessageISystemMessage">
            <summary>Sets the shim of TestActorRefBase`1.SendSystemMessage(ISystemMessage message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.SendSystemMessageISystemMessageIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.SendSystemMessage(ISystemMessage message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.SystemIComparableAkkaActorIActorRefCompareToIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.System.IComparable&lt;Akka.Actor.IActorRef&gt;.CompareTo(IActorRef other)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.SystemIEquatableAkkaActorIActorRefEqualsIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.System.IEquatable&lt;Akka.Actor.IActorRef&gt;.Equals(IActorRef other)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.TellObject">
            <summary>Sets the shim of TestActorRefBase`1.Tell(Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.TellObjectIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.Tell(Object message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.ToString01">
            <summary>Sets the shim of TestActorRefBase`1.ToString()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.UnderlyingActorGet">
            <summary>Sets the shim of TestActorRefBase`1.get_UnderlyingActor()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.UnwatchIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.Unwatch(IActorRef subject)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.AllInstances.WatchIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.Watch(IActorRef subject)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRefBase`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRefBase`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRefBase`1.Bind(Akka.Actor.IActorRef)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRefBase`1.Bind(Akka.Actor.IActorRefScope)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRefBase`1.Bind(Akka.Actor.ICanTell)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRefBase`1.Bind(Akka.Actor.IInternalActorRef)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRefBase`1.Bind(Akka.Util.ISurrogated)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRefBase`1.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRefBase`1.Bind(System.IComparable{Akka.Actor.IActorRef})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestActorRefBase`1.Bind(System.IEquatable{Akka.Actor.IActorRef})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.CompareToObject">
            <summary>Sets the shim of TestActorRefBase`1.CompareTo(Object obj)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.ConstructorActorSystemPropsIActorRefString">
            <summary>Sets the shim of TestActorRefBase`1.TestActorRefBase`1(ActorSystem system, Props actorProps, IActorRef supervisor, String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.EqualityOpIActorRefTestActorRefBaseOfT0">
            <summary>Sets the shim of TestActorRefBase`1.op_Equality(IActorRef actorRef, TestActorRefBase`1&lt;!0&gt; testActorRef)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.EqualityOpTestActorRefBaseOfT0IActorRef">
            <summary>Sets the shim of TestActorRefBase`1.op_Equality(TestActorRefBase`1&lt;!0&gt; testActorRef, IActorRef actorRef)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.EqualsIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.Equals(IActorRef other)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.EqualsObject">
            <summary>Sets the shim of TestActorRefBase`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.ForwardObject">
            <summary>Sets the shim of TestActorRefBase`1.Forward(Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.GetHashCode">
            <summary>Sets the shim of TestActorRefBase`1.GetHashCode()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.InequalityOpIActorRefTestActorRefBaseOfT0">
            <summary>Sets the shim of TestActorRefBase`1.op_Inequality(IActorRef actorRef, TestActorRefBase`1&lt;!0&gt; testActorRef)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.InequalityOpTestActorRefBaseOfT0IActorRef">
            <summary>Sets the shim of TestActorRefBase`1.op_Inequality(TestActorRefBase`1&lt;!0&gt; testActorRef, IActorRef actorRef)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.InternalRefGet">
            <summary>Sets the shim of TestActorRefBase`1.get_InternalRef()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.IsLocalAkkaActorIActorRefScopeget">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IActorRefScope.get_IsLocal()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.IsTerminatedAkkaActorIInternalActorRefget">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.get_IsTerminated()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.ParentAkkaActorIInternalActorRefget">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.get_Parent()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.PathAkkaActorIActorRefget">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IActorRef.get_Path()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.PathGet">
            <summary>Sets the shim of TestActorRefBase`1.get_Path()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.ProviderAkkaActorIInternalActorRefget">
            <summary>Sets the shim of TestActorRefBase`1.Akka.Actor.IInternalActorRef.get_Provider()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.ReceiveObjectIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.Receive(Object message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.RefGet">
            <summary>Sets the shim of TestActorRefBase`1.get_Ref()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.SendSystemMessageISystemMessage">
            <summary>Sets the shim of TestActorRefBase`1.SendSystemMessage(ISystemMessage message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.SendSystemMessageISystemMessageIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.SendSystemMessage(ISystemMessage message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.SystemIComparableAkkaActorIActorRefCompareToIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.System.IComparable&lt;Akka.Actor.IActorRef&gt;.CompareTo(IActorRef other)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.SystemIEquatableAkkaActorIActorRefEqualsIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.System.IEquatable&lt;Akka.Actor.IActorRef&gt;.Equals(IActorRef other)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.TellObject">
            <summary>Sets the shim of TestActorRefBase`1.Tell(Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.TellObjectIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.Tell(Object message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.ToActorRefTestActorRefBaseOfT0">
            <summary>Sets the shim of TestActorRefBase`1.ToActorRef(TestActorRefBase`1&lt;!0&gt; actorRef)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.ToString">
            <summary>Sets the shim of TestActorRefBase`1.ToString()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.UnderlyingActorGet">
            <summary>Sets the shim of TestActorRefBase`1.get_UnderlyingActor()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.UnwatchIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.Unwatch(IActorRef subject)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestActorRefBase`1.WatchIActorRef">
            <summary>Sets the shim of TestActorRefBase`1.Watch(IActorRef subject)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestBarrier">
            <summary>Shim type of Akka.TestKit.TestBarrier</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestBarrier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestBarrier.#ctor(Akka.TestKit.TestBarrier)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestBarrier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBarrier.AllInstances.Await">
            <summary>Sets the shim of TestBarrier.Await()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBarrier.AllInstances.AwaitTimeSpan">
            <summary>Sets the shim of TestBarrier.Await(TimeSpan timeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBarrier.AllInstances.Reset">
            <summary>Sets the shim of TestBarrier.Reset()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBarrier.Await">
            <summary>Sets the shim of TestBarrier.Await()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBarrier.AwaitTimeSpan">
            <summary>Sets the shim of TestBarrier.Await(TimeSpan timeout)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestBarrier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestBarrier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBarrier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBarrier.ConstructorTestKitBaseInt32NullableOfTimeSpan">
            <summary>Sets the shim of TestBarrier.TestBarrier(TestKitBase testKit, Int32 count, Nullable`1&lt;TimeSpan&gt; defaultTimeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBarrier.Reset">
            <summary>Sets the shim of TestBarrier.Reset()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBarrier.StaticConstructor">
            <summary>Sets the shim of TestBarrier.TestBarrier()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestBreaker">
            <summary>Shim type of Akka.TestKit.TestBreaker</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestBreaker.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestBreaker.#ctor(Akka.TestKit.TestBreaker)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestBreaker.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.AllInstances.ClosedLatchGet">
            <summary>Sets the shim of TestBreaker.get_ClosedLatch()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.AllInstances.ClosedLatchSetCountdownEvent">
            <summary>Sets the shim of TestBreaker.set_ClosedLatch(CountdownEvent value)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.AllInstances.HalfOpenLatchGet">
            <summary>Sets the shim of TestBreaker.get_HalfOpenLatch()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.AllInstances.HalfOpenLatchSetCountdownEvent">
            <summary>Sets the shim of TestBreaker.set_HalfOpenLatch(CountdownEvent value)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.AllInstances.InstanceGet">
            <summary>Sets the shim of TestBreaker.get_Instance()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.AllInstances.InstanceSetCircuitBreaker">
            <summary>Sets the shim of TestBreaker.set_Instance(CircuitBreaker value)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.AllInstances.OpenLatchGet">
            <summary>Sets the shim of TestBreaker.get_OpenLatch()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.AllInstances.OpenLatchSetCountdownEvent">
            <summary>Sets the shim of TestBreaker.set_OpenLatch(CountdownEvent value)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.AllInstances._ctorb__16_0">
            <summary>Sets the shim of TestBreaker.&lt;.ctor&gt;b__16_0()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.AllInstances._ctorb__16_1">
            <summary>Sets the shim of TestBreaker.&lt;.ctor&gt;b__16_1()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.AllInstances._ctorb__16_2">
            <summary>Sets the shim of TestBreaker.&lt;.ctor&gt;b__16_2()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestBreaker.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestBreaker.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.ClosedLatchGet">
            <summary>Sets the shim of TestBreaker.get_ClosedLatch()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.ClosedLatchSetCountdownEvent">
            <summary>Sets the shim of TestBreaker.set_ClosedLatch(CountdownEvent value)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.ConstructorCircuitBreaker">
            <summary>Sets the shim of TestBreaker.TestBreaker(CircuitBreaker instance)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.HalfOpenLatchGet">
            <summary>Sets the shim of TestBreaker.get_HalfOpenLatch()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.HalfOpenLatchSetCountdownEvent">
            <summary>Sets the shim of TestBreaker.set_HalfOpenLatch(CountdownEvent value)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.InstanceGet">
            <summary>Sets the shim of TestBreaker.get_Instance()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.InstanceSetCircuitBreaker">
            <summary>Sets the shim of TestBreaker.set_Instance(CircuitBreaker value)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.OpenLatchGet">
            <summary>Sets the shim of TestBreaker.get_OpenLatch()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker.OpenLatchSetCountdownEvent">
            <summary>Sets the shim of TestBreaker.set_OpenLatch(CountdownEvent value)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker._ctorb__16_0">
            <summary>Sets the shim of TestBreaker.&lt;.ctor&gt;b__16_0()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker._ctorb__16_1">
            <summary>Sets the shim of TestBreaker.&lt;.ctor&gt;b__16_1()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestBreaker._ctorb__16_2">
            <summary>Sets the shim of TestBreaker.&lt;.ctor&gt;b__16_2()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestEventListener">
            <summary>Shim type of Akka.TestKit.TestEventListener</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestEventListener.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestEventListener.#ctor(Akka.TestKit.TestEventListener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestEventListener.AddFilterIEventFilter">
            <summary>Sets the shim of TestEventListener.AddFilter(IEventFilter filter)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestEventListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestEventListener.AllInstances.AddFilterIEventFilter">
            <summary>Sets the shim of TestEventListener.AddFilter(IEventFilter filter)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestEventListener.AllInstances.HandleDeadLetterDeadLetter">
            <summary>Sets the shim of TestEventListener.HandleDeadLetter(DeadLetter message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestEventListener.AllInstances.ReceiveObject">
            <summary>Sets the shim of TestEventListener.Receive(Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestEventListener.AllInstances.RemoveFilterIEventFilter">
            <summary>Sets the shim of TestEventListener.RemoveFilter(IEventFilter filter)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestEventListener.AllInstances.ShouldFilterLogEvent">
            <summary>Sets the shim of TestEventListener.ShouldFilter(LogEvent message)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestEventListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestEventListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestEventListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestEventListener.Bind(Akka.Actor.IInternalActor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestEventListener.Bind(Akka.Dispatch.IRequiresMessageQueue{Akka.Event.ILoggerMessageQueueSemantics})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestEventListener.Constructor">
            <summary>Sets the shim of TestEventListener.TestEventListener()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestEventListener.HandleDeadLetterDeadLetter">
            <summary>Sets the shim of TestEventListener.HandleDeadLetter(DeadLetter message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestEventListener.ReceiveObject">
            <summary>Sets the shim of TestEventListener.Receive(Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestEventListener.RemoveFilterIEventFilter">
            <summary>Sets the shim of TestEventListener.RemoveFilter(IEventFilter filter)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestEventListener.ShouldFilterLogEvent">
            <summary>Sets the shim of TestEventListener.ShouldFilter(LogEvent message)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestFSMRef`3">
            <summary>Shim type of Akka.TestKit.TestFSMRef`3</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestFSMRef`3.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestFSMRef`3.#ctor(Akka.TestKit.TestFSMRef{`0,`1,`2})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestFSMRef`3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.AllInstances.CancelTimerString">
            <summary>Sets the shim of TestFSMRef`3.CancelTimer(String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.AllInstances.IsStateTimerActive">
            <summary>Sets the shim of TestFSMRef`3.IsStateTimerActive()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.AllInstances.IsTimerActiveString">
            <summary>Sets the shim of TestFSMRef`3.IsTimerActive(String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.AllInstances.SetStateDataT2NullableOfTimeSpan">
            <summary>Sets the shim of TestFSMRef`3.SetStateData(!2 stateData, Nullable`1&lt;TimeSpan&gt; timeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.AllInstances.SetStateT1NullableOfTimeSpan">
            <summary>Sets the shim of TestFSMRef`3.SetState(!1 stateName, Nullable`1&lt;TimeSpan&gt; timeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.AllInstances.SetStateT1T2NullableOfTimeSpanFSMBaseReason">
            <summary>Sets the shim of TestFSMRef`3.SetState(!1 stateName, !2 stateData, Nullable`1&lt;TimeSpan&gt; timeout, Reason stopReason)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.AllInstances.SetStateTimeoutTimeSpan">
            <summary>Sets the shim of TestFSMRef`3.SetStateTimeout(TimeSpan timeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.AllInstances.SetTimerStringObjectTimeSpanBoolean">
            <summary>Sets the shim of TestFSMRef`3.SetTimer(String name, Object msg, TimeSpan timeout, Boolean repeat)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.AllInstances.StateDataGet">
            <summary>Sets the shim of TestFSMRef`3.get_StateData()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.AllInstances.StateNameGet">
            <summary>Sets the shim of TestFSMRef`3.get_StateName()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestFSMRef`3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestFSMRef`3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestFSMRef`3.Bind(Akka.Actor.IActorRef)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestFSMRef`3.Bind(Akka.Actor.IActorRefScope)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestFSMRef`3.Bind(Akka.Actor.ICanTell)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestFSMRef`3.Bind(Akka.Actor.IInternalActorRef)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestFSMRef`3.Bind(Akka.Util.ISurrogated)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestFSMRef`3.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestFSMRef`3.Bind(System.IComparable{Akka.Actor.IActorRef})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestFSMRef`3.Bind(System.IEquatable{Akka.Actor.IActorRef})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.CancelTimerString">
            <summary>Sets the shim of TestFSMRef`3.CancelTimer(String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.ConstructorActorSystemPropsIActorRefStringBoolean">
            <summary>Sets the shim of TestFSMRef`3.TestFSMRef`3(ActorSystem system, Props props, IActorRef supervisor, String name, Boolean activateLogging)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.IsStateTimerActive">
            <summary>Sets the shim of TestFSMRef`3.IsStateTimerActive()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.IsTimerActiveString">
            <summary>Sets the shim of TestFSMRef`3.IsTimerActive(String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.SetStateDataT2NullableOfTimeSpan">
            <summary>Sets the shim of TestFSMRef`3.SetStateData(!2 stateData, Nullable`1&lt;TimeSpan&gt; timeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.SetStateT1NullableOfTimeSpan">
            <summary>Sets the shim of TestFSMRef`3.SetState(!1 stateName, Nullable`1&lt;TimeSpan&gt; timeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.SetStateT1T2NullableOfTimeSpanFSMBaseReason">
            <summary>Sets the shim of TestFSMRef`3.SetState(!1 stateName, !2 stateData, Nullable`1&lt;TimeSpan&gt; timeout, Reason stopReason)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.SetStateTimeoutTimeSpan">
            <summary>Sets the shim of TestFSMRef`3.SetStateTimeout(TimeSpan timeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.SetTimerStringObjectTimeSpanBoolean">
            <summary>Sets the shim of TestFSMRef`3.SetTimer(String name, Object msg, TimeSpan timeout, Boolean repeat)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.StateDataGet">
            <summary>Sets the shim of TestFSMRef`3.get_StateData()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestFSMRef`3.StateNameGet">
            <summary>Sets the shim of TestFSMRef`3.get_StateName()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestKitAssertionsExtension">
            <summary>Shim type of Akka.TestKit.TestKitAssertionsExtension</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitAssertionsExtension.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitAssertionsExtension.#ctor(Akka.TestKit.TestKitAssertionsExtension)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestKitAssertionsExtension.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitAssertionsExtension.AllInstances.CreateExtensionExtendedActorSystem">
            <summary>Sets the shim of TestKitAssertionsExtension.CreateExtension(ExtendedActorSystem system)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitAssertionsExtension.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitAssertionsExtension.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitAssertionsExtension.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitAssertionsExtension.Bind(Akka.Actor.IExtensionId)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitAssertionsExtension.Bind(Akka.Actor.IExtensionId{Akka.TestKit.TestKitAssertionsProvider})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitAssertionsExtension.ConstructorITestKitAssertions">
            <summary>Sets the shim of TestKitAssertionsExtension.TestKitAssertionsExtension(ITestKitAssertions assertions)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitAssertionsExtension.CreateExtensionExtendedActorSystem">
            <summary>Sets the shim of TestKitAssertionsExtension.CreateExtension(ExtendedActorSystem system)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitAssertionsExtension.ForActorSystem">
            <summary>Sets the shim of TestKitAssertionsExtension.For(ActorSystem system)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestKitAssertionsProvider">
            <summary>Shim type of Akka.TestKit.TestKitAssertionsProvider</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitAssertionsProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitAssertionsProvider.#ctor(Akka.TestKit.TestKitAssertionsProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestKitAssertionsProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitAssertionsProvider.AllInstances.AssertionsGet">
            <summary>Sets the shim of TestKitAssertionsProvider.get_Assertions()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitAssertionsProvider.AssertionsGet">
            <summary>Sets the shim of TestKitAssertionsProvider.get_Assertions()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitAssertionsProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitAssertionsProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitAssertionsProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitAssertionsProvider.Bind(Akka.Actor.IExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitAssertionsProvider.ConstructorITestKitAssertions">
            <summary>Sets the shim of TestKitAssertionsProvider.TestKitAssertionsProvider(ITestKitAssertions assertions)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestKitBase">
            <summary>Shim type of Akka.TestKit.TestKitBase</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.#ctor(Akka.TestKit.TestKitBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfActionOfIActorDslIActorContextString">
            <summary>Sets the shim of TestKitBase.ActorOf(Action`2&lt;IActorDsl,IActorContext&gt; configure, String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfActionOfIActorDslString">
            <summary>Sets the shim of TestKitBase.ActorOf(Action`1&lt;IActorDsl&gt; configure, String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfAsTestActorRefOf1ExpressionOfFuncOfM0IActorRefString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0}},Akka.Actor.IActorRef,System.String,Akka.TestKit.TestActorRef{``0}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestActorRef(Expression`1&lt;Func`1&lt;!!0&gt;&gt; factory, IActorRef supervisor, String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfAsTestActorRefOf1ExpressionOfFuncOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0}},System.String,Akka.TestKit.TestActorRef{``0}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestActorRef(Expression`1&lt;Func`1&lt;!!0&gt;&gt; factory, String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfAsTestActorRefOf1IActorRefString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.Actor.IActorRef,System.String,Akka.TestKit.TestActorRef{``0}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestActorRef(IActorRef supervisor, String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfAsTestActorRefOf1PropsIActorRefString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.Actor.Props,Akka.Actor.IActorRef,System.String,Akka.TestKit.TestActorRef{``0}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestActorRef(Props props, IActorRef supervisor, String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfAsTestActorRefOf1PropsString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.Actor.Props,System.String,Akka.TestKit.TestActorRef{``0}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestActorRef(Props props, String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfAsTestActorRefOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Akka.TestKit.TestActorRef{``0}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestActorRef(String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfAsTestFSMRefOf3ExpressionOfFuncOfM0IActorRefStringBoolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0}},Akka.Actor.IActorRef,System.String,System.Boolean,Akka.TestKit.TestFSMRef{``0,``1,``2}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestFSMRef(Expression`1&lt;Func`1&lt;!!0&gt;&gt; factory, IActorRef supervisor, String name, Boolean withLogging)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfAsTestFSMRefOf3ExpressionOfFuncOfM0StringBoolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0}},System.String,System.Boolean,Akka.TestKit.TestFSMRef{``0,``1,``2}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestFSMRef(Expression`1&lt;Func`1&lt;!!0&gt;&gt; factory, String name, Boolean withLogging)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfAsTestFSMRefOf3IActorRefStringBoolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.Actor.IActorRef,System.String,System.Boolean,Akka.TestKit.TestFSMRef{``0,``1,``2}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestFSMRef(IActorRef supervisor, String name, Boolean withLogging)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfAsTestFSMRefOf3PropsIActorRefStringBoolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.Actor.Props,Akka.Actor.IActorRef,System.String,System.Boolean,Akka.TestKit.TestFSMRef{``0,``1,``2}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestFSMRef(Props props, IActorRef supervisor, String name, Boolean withLogging)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfAsTestFSMRefOf3PropsStringBoolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.Actor.Props,System.String,System.Boolean,Akka.TestKit.TestFSMRef{``0,``1,``2}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestFSMRef(Props props, String name, Boolean withLogging)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfAsTestFSMRefOf3StringBoolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Boolean,Akka.TestKit.TestFSMRef{``0,``1,``2}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestFSMRef(String name, Boolean withLogging)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.Actor.IActorRef})">
            <summary>Sets the shim of TestKitBase.ActorOf()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfOf1ExpressionOfFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0}},Akka.Actor.IActorRef})">
            <summary>Sets the shim of TestKitBase.ActorOf(Expression`1&lt;Func`1&lt;!!0&gt;&gt; factory)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfOf1ExpressionOfFuncOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0}},System.String,Akka.Actor.IActorRef})">
            <summary>Sets the shim of TestKitBase.ActorOf(Expression`1&lt;Func`1&lt;!!0&gt;&gt; factory, String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Akka.Actor.IActorRef})">
            <summary>Sets the shim of TestKitBase.ActorOf(String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfProps">
            <summary>Sets the shim of TestKitBase.ActorOf(Props props)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ActorOfPropsString">
            <summary>Sets the shim of TestKitBase.ActorOf(Props props, String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ActorSelectionActorPath">
            <summary>Sets the shim of TestKitBase.ActorSelection(ActorPath actorPath)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ActorSelectionIActorRefString">
            <summary>Sets the shim of TestKitBase.ActorSelection(IActorRef anchorRef, String actorPath)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ActorSelectionString">
            <summary>Sets the shim of TestKitBase.ActorSelection(String actorPath)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfActionOfIActorDslIActorContextString">
            <summary>Sets the shim of TestKitBase.ActorOf(Action`2&lt;IActorDsl,IActorContext&gt; configure, String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfActionOfIActorDslString">
            <summary>Sets the shim of TestKitBase.ActorOf(Action`1&lt;IActorDsl&gt; configure, String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfAsTestActorRefOf1ExpressionOfFuncOfM0IActorRefString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Linq.Expressions.Expression{System.Func{``0}},Akka.Actor.IActorRef,System.String,Akka.TestKit.TestActorRef{``0}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestActorRef(Expression`1&lt;Func`1&lt;!!0&gt;&gt; factory, IActorRef supervisor, String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfAsTestActorRefOf1ExpressionOfFuncOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Linq.Expressions.Expression{System.Func{``0}},System.String,Akka.TestKit.TestActorRef{``0}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestActorRef(Expression`1&lt;Func`1&lt;!!0&gt;&gt; factory, String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfAsTestActorRefOf1IActorRefString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,Akka.Actor.IActorRef,System.String,Akka.TestKit.TestActorRef{``0}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestActorRef(IActorRef supervisor, String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfAsTestActorRefOf1PropsIActorRefString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,Akka.Actor.Props,Akka.Actor.IActorRef,System.String,Akka.TestKit.TestActorRef{``0}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestActorRef(Props props, IActorRef supervisor, String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfAsTestActorRefOf1PropsString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,Akka.Actor.Props,System.String,Akka.TestKit.TestActorRef{``0}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestActorRef(Props props, String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfAsTestActorRefOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.String,Akka.TestKit.TestActorRef{``0}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestActorRef(String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfAsTestFSMRefOf3ExpressionOfFuncOfM0IActorRefStringBoolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Linq.Expressions.Expression{System.Func{``0}},Akka.Actor.IActorRef,System.String,System.Boolean,Akka.TestKit.TestFSMRef{``0,``1,``2}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestFSMRef(Expression`1&lt;Func`1&lt;!!0&gt;&gt; factory, IActorRef supervisor, String name, Boolean withLogging)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfAsTestFSMRefOf3ExpressionOfFuncOfM0StringBoolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Linq.Expressions.Expression{System.Func{``0}},System.String,System.Boolean,Akka.TestKit.TestFSMRef{``0,``1,``2}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestFSMRef(Expression`1&lt;Func`1&lt;!!0&gt;&gt; factory, String name, Boolean withLogging)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfAsTestFSMRefOf3IActorRefStringBoolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,Akka.Actor.IActorRef,System.String,System.Boolean,Akka.TestKit.TestFSMRef{``0,``1,``2}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestFSMRef(IActorRef supervisor, String name, Boolean withLogging)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfAsTestFSMRefOf3PropsIActorRefStringBoolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,Akka.Actor.Props,Akka.Actor.IActorRef,System.String,System.Boolean,Akka.TestKit.TestFSMRef{``0,``1,``2}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestFSMRef(Props props, IActorRef supervisor, String name, Boolean withLogging)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfAsTestFSMRefOf3PropsStringBoolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,Akka.Actor.Props,System.String,System.Boolean,Akka.TestKit.TestFSMRef{``0,``1,``2}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestFSMRef(Props props, String name, Boolean withLogging)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfAsTestFSMRefOf3StringBoolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.String,System.Boolean,Akka.TestKit.TestFSMRef{``0,``1,``2}})">
            <summary>Sets the shim of TestKitBase.ActorOfAsTestFSMRef(String name, Boolean withLogging)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,Akka.Actor.IActorRef})">
            <summary>Sets the shim of TestKitBase.ActorOf()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfOf1ExpressionOfFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Linq.Expressions.Expression{System.Func{``0}},Akka.Actor.IActorRef})">
            <summary>Sets the shim of TestKitBase.ActorOf(Expression`1&lt;Func`1&lt;!!0&gt;&gt; factory)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfOf1ExpressionOfFuncOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Linq.Expressions.Expression{System.Func{``0}},System.String,Akka.Actor.IActorRef})">
            <summary>Sets the shim of TestKitBase.ActorOf(Expression`1&lt;Func`1&lt;!!0&gt;&gt; factory, String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.String,Akka.Actor.IActorRef})">
            <summary>Sets the shim of TestKitBase.ActorOf(String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfProps">
            <summary>Sets the shim of TestKitBase.ActorOf(Props props)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorOfPropsString">
            <summary>Sets the shim of TestKitBase.ActorOf(Props props, String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorSelectionActorPath">
            <summary>Sets the shim of TestKitBase.ActorSelection(ActorPath actorPath)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorSelectionIActorRefString">
            <summary>Sets the shim of TestKitBase.ActorSelection(IActorRef anchorRef, String actorPath)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ActorSelectionString">
            <summary>Sets the shim of TestKitBase.ActorSelection(String actorPath)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.AssertPredicateIsTrueForMessageOf1PredicateOfM0M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Akka.TestKit.TestKitBase,System.Predicate{``0},``0,System.String})">
            <summary>Sets the shim of TestKitBase.AssertPredicateIsTrueForMessage(Predicate`1&lt;!!0&gt; isMessage, !!0 m, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.AssertPredicateIsTrueForSenderPredicateOfIActorRefIActorRefStringObject">
            <summary>Sets the shim of TestKitBase.AssertPredicateIsTrueForSender(Predicate`1&lt;IActorRef&gt; isSender, IActorRef sender, String hint, Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.AssertionsFailStringObjectArrayString">
            <summary>Sets the shim of TestKitBase.AssertionsFail(String format, Object[] args, String message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.AwaitAssertActionNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.AwaitAssert(Action assertion, Nullable`1&lt;TimeSpan&gt; duration, Nullable`1&lt;TimeSpan&gt; interval)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.AwaitConditionFuncOfBoolean">
            <summary>Sets the shim of TestKitBase.AwaitCondition(Func`1&lt;Boolean&gt; conditionIsFulfilled)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.AwaitConditionFuncOfBooleanNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.AwaitCondition(Func`1&lt;Boolean&gt; conditionIsFulfilled, Nullable`1&lt;TimeSpan&gt; max)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.AwaitConditionFuncOfBooleanNullableOfTimeSpanNullableOfTimeSpanString">
            <summary>Sets the shim of TestKitBase.AwaitCondition(Func`1&lt;Boolean&gt; conditionIsFulfilled, Nullable`1&lt;TimeSpan&gt; max, Nullable`1&lt;TimeSpan&gt; interval, String message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.AwaitConditionFuncOfBooleanNullableOfTimeSpanString">
            <summary>Sets the shim of TestKitBase.AwaitCondition(Func`1&lt;Boolean&gt; conditionIsFulfilled, Nullable`1&lt;TimeSpan&gt; max, String message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.AwaitConditionNoThrowFuncOfBooleanTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.AwaitConditionNoThrow(Func`1&lt;Boolean&gt; conditionIsFulfilled, TimeSpan max, Nullable`1&lt;TimeSpan&gt; interval)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.CheckMissingAndUnexpectedOf2IReadOnlyCollectionOfM0IReadOnlyCollectionOfM1StringStringBooleanString``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Akka.TestKit.TestKitBase,System.Collections.Generic.IReadOnlyCollection{``0},System.Collections.Generic.IReadOnlyCollection{``1},System.String,System.String,System.Boolean,System.String})">
            <summary>Sets the shim of TestKitBase.CheckMissingAndUnexpected(IReadOnlyCollection`1&lt;!!0&gt; missing, IReadOnlyCollection`1&lt;!!1&gt; unexpected, String missingMessage, String unexpectedMessage, Boolean shouldLog, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ConditionalLogBooleanStringObjectArray">
            <summary>Sets the shim of TestKitBase.ConditionalLog(Boolean shouldLog, String format, Object[] args)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ConditionalLogStringObjectArray">
            <summary>Sets the shim of TestKitBase.ConditionalLog(String format, Object[] args)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.CreateEventFilterActorSystem">
            <summary>Sets the shim of TestKitBase.CreateEventFilter(ActorSystem system)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.CreateTestActorActorSystemString">
            <summary>Sets the shim of TestKitBase.CreateTestActor(ActorSystem system, String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.CreateTestActorString">
            <summary>Sets the shim of TestKitBase.CreateTestActor(String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.CreateTestBarrierInt32">
            <summary>Sets the shim of TestKitBase.CreateTestBarrier(Int32 count)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.CreateTestLatchInt32">
            <summary>Sets the shim of TestKitBase.CreateTestLatch(Int32 count)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.CreateTestProbeActorSystemString">
            <summary>Sets the shim of TestKitBase.CreateTestProbe(ActorSystem system, String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.CreateTestProbeString">
            <summary>Sets the shim of TestKitBase.CreateTestProbe(String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.DilatedTimeSpan">
            <summary>Sets the shim of TestKitBase.Dilated(TimeSpan duration)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.EventFilterGet">
            <summary>Sets the shim of TestKitBase.get_EventFilter()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgAllOfOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,``0[],System.Collections.Generic.IReadOnlyCollection{``0}})">
            <summary>Sets the shim of TestKitBase.ExpectMsgAllOf(!!0[] messages)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgAllOfOf1TimeSpanM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.TimeSpan,``0[],System.Collections.Generic.IReadOnlyCollection{``0}})">
            <summary>Sets the shim of TestKitBase.ExpectMsgAllOf(TimeSpan max, !!0[] messages)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgAnyOfOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,``0[],``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsgAnyOf(!!0[] messages)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgFromOf1ActionOfIActorRefActionOfM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Action{Akka.Actor.IActorRef},System.Action{``0},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsgFrom(Action`1&lt;IActorRef&gt; assertSender, Action`1&lt;!!0&gt; assertMessage, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgFromOf1IActorRefActionOfM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,Akka.Actor.IActorRef,System.Action{``0},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsgFrom(IActorRef sender, Action`1&lt;!!0&gt; assertMessage, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgFromOf1IActorRefM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,Akka.Actor.IActorRef,``0,System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsgFrom(IActorRef sender, !!0 message, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgFromOf1IActorRefNullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,Akka.Actor.IActorRef,System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsgFrom(IActorRef sender, Nullable`1&lt;TimeSpan&gt; duration, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgFromOf1IActorRefPredicateOfM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,Akka.Actor.IActorRef,System.Predicate{``0},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsgFrom(IActorRef sender, Predicate`1&lt;!!0&gt; isMessage, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgFromOf1PredicateOfIActorRefPredicateOfM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Predicate{Akka.Actor.IActorRef},System.Predicate{``0},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsgFrom(Predicate`1&lt;IActorRef&gt; isSender, Predicate`1&lt;!!0&gt; isMessage, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgOf1ActionOfM0IActorRefNullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Action{``0,Akka.Actor.IActorRef},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsg(Action`2&lt;!!0,IActorRef&gt; assertMessageAndSender, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgOf1ActionOfM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Action{``0},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsg(Action`1&lt;!!0&gt; assert, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgOf1FuncOfM0IActorRefBooleanNullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Func{``0,Akka.Actor.IActorRef,System.Boolean},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsg(Func`3&lt;!!0,IActorRef,Boolean&gt; isMessageAndSender, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgOf1M0FuncOfM0M0BooleanNullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,``0,System.Func{``0,``0,System.Boolean},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsg(!!0 expected, Func`3&lt;!!0,!!0,Boolean&gt; comparer, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgOf1M0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,``0,System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsg(!!0 message, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgOf1NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsg(Nullable`1&lt;TimeSpan&gt; duration, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectMsgOf1PredicateOfM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Predicate{``0},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsg(Predicate`1&lt;!!0&gt; isMessage, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectNoMsg">
            <summary>Sets the shim of TestKitBase.ExpectNoMsg()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectNoMsgInt32">
            <summary>Sets the shim of TestKitBase.ExpectNoMsg(Int32 milliseconds)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectNoMsgTimeSpan">
            <summary>Sets the shim of TestKitBase.ExpectNoMsg(TimeSpan duration)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ExpectTerminatedIActorRefNullableOfTimeSpanString">
            <summary>Sets the shim of TestKitBase.ExpectTerminated(IActorRef target, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.FishForMessageOf1PredicateOfM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Predicate{``0},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.FishForMessage(Predicate`1&lt;!!0&gt; isMessage, Nullable`1&lt;TimeSpan&gt; max, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.FishForMessagePredicateOfObjectNullableOfTimeSpanString">
            <summary>Sets the shim of TestKitBase.FishForMessage(Predicate`1&lt;Object&gt; isMessage, Nullable`1&lt;TimeSpan&gt; max, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.FormatWrongSenderMessageIActorRefStringString">
            <summary>Sets the shim of TestKitBase.FormatWrongSenderMessage(IActorRef actualSender, String expectedSender, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.GetTimeoutOrDefaultNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.GetTimeoutOrDefault(Nullable`1&lt;TimeSpan&gt; timeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.HasMessagesGet">
            <summary>Sets the shim of TestKitBase.get_HasMessages()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.IgnoreMessagesFuncOfObjectBoolean">
            <summary>Sets the shim of TestKitBase.IgnoreMessages(Func`2&lt;Object,Boolean&gt; shouldIgnoreMessage)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.IgnoreMessagesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Akka.TestKit.TestKitBase})">
            <summary>Sets the shim of TestKitBase.IgnoreMessages()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.IgnoreMessagesOf1FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Akka.TestKit.TestKitBase,System.Func{``0,System.Boolean}})">
            <summary>Sets the shim of TestKitBase.IgnoreMessages(Func`2&lt;!!0,Boolean&gt; shouldIgnoreMessage)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.IgnoreNoMessages">
            <summary>Sets the shim of TestKitBase.IgnoreNoMessages()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.InitializeTestActorSystemConfigStringString">
            <summary>Sets the shim of TestKitBase.InitializeTest(ActorSystem system, Config config, String actorSystemName, String testActorName)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.InternalExpectMsgAllOfOf1TimeSpanIReadOnlyCollectionOfM0FuncOfM0M0BooleanBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.TimeSpan,System.Collections.Generic.IReadOnlyCollection{``0},System.Func{``0,``0,System.Boolean},System.Boolean,System.Collections.Generic.IReadOnlyCollection{``0}})">
            <summary>Sets the shim of TestKitBase.InternalExpectMsgAllOf(TimeSpan max, IReadOnlyCollection`1&lt;!!0&gt; messages, Func`3&lt;!!0,!!0,Boolean&gt; areEqual, Boolean shouldLog)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.InternalExpectMsgAnyOfOf1TimeSpanM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.TimeSpan,``0[],``0})">
            <summary>Sets the shim of TestKitBase.InternalExpectMsgAnyOf(TimeSpan max, !!0[] messages)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.InternalExpectMsgEnvelopeOf1NullableOfTimeSpanActionOfM0ActionOfIActorRefString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Nullable{System.TimeSpan},System.Action{``0},System.Action{Akka.Actor.IActorRef},System.String,Akka.TestKit.MessageEnvelope})">
            <summary>Sets the shim of TestKitBase.InternalExpectMsgEnvelope(Nullable`1&lt;TimeSpan&gt; timeout, Action`1&lt;!!0&gt; msgAssert, Action`1&lt;IActorRef&gt; senderAssert, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.InternalExpectMsgEnvelopeOf1NullableOfTimeSpanActionOfM0IActorRefStringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Nullable{System.TimeSpan},System.Action{``0,Akka.Actor.IActorRef},System.String,System.Boolean,Akka.TestKit.MessageEnvelope})">
            <summary>Sets the shim of TestKitBase.InternalExpectMsgEnvelope(Nullable`1&lt;TimeSpan&gt; timeout, Action`2&lt;!!0,IActorRef&gt; assert, String hint, Boolean shouldLog)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.InternalExpectMsgOf1NullableOfTimeSpanActionOfM0ActionOfIActorRefString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Nullable{System.TimeSpan},System.Action{``0},System.Action{Akka.Actor.IActorRef},System.String,``0})">
            <summary>Sets the shim of TestKitBase.InternalExpectMsg(Nullable`1&lt;TimeSpan&gt; timeout, Action`1&lt;!!0&gt; msgAssert, Action`1&lt;IActorRef&gt; senderAssert, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.InternalExpectMsgOf1NullableOfTimeSpanActionOfM0IActorRefString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Nullable{System.TimeSpan},System.Action{``0,Akka.Actor.IActorRef},System.String,``0})">
            <summary>Sets the shim of TestKitBase.InternalExpectMsg(Nullable`1&lt;TimeSpan&gt; timeout, Action`2&lt;!!0,IActorRef&gt; assert, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.InternalExpectMsgOf1NullableOfTimeSpanActionOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Nullable{System.TimeSpan},System.Action{``0},System.String,``0})">
            <summary>Sets the shim of TestKitBase.InternalExpectMsg(Nullable`1&lt;TimeSpan&gt; timeout, Action`1&lt;!!0&gt; msgAssert, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.InternalExpectNoMsgTimeSpan">
            <summary>Sets the shim of TestKitBase.InternalExpectNoMsg(TimeSpan duration)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.InternalReceiveNInt32TimeSpanBoolean">
            <summary>Sets the shim of TestKitBase.InternalReceiveN(Int32 numberOfMessages, TimeSpan max, Boolean shouldLog)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.InternalTryReceiveOneMessageEnvelopeOutNullableOfTimeSpanCancellationTokenBoolean">
            <summary>Sets the shim of TestKitBase.InternalTryReceiveOne(MessageEnvelope&amp; envelope, Nullable`1&lt;TimeSpan&gt; max, CancellationToken cancellationToken, Boolean shouldLog)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.LastMessageGet">
            <summary>Sets the shim of TestKitBase.get_LastMessage()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.LastSenderGet">
            <summary>Sets the shim of TestKitBase.get_LastSender()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.LogGet">
            <summary>Sets the shim of TestKitBase.get_Log()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ReceiveNInt32">
            <summary>Sets the shim of TestKitBase.ReceiveN(Int32 numberOfMessages)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ReceiveNInt32TimeSpan">
            <summary>Sets the shim of TestKitBase.ReceiveN(Int32 numberOfMessages, TimeSpan max)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ReceiveOneCancellationToken">
            <summary>Sets the shim of TestKitBase.ReceiveOne(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ReceiveOneNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.ReceiveOne(Nullable`1&lt;TimeSpan&gt; max)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ReceiveWhileOf1FuncOfObjectM0NullableOfTimeSpanNullableOfTimeSpanInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Func{System.Object,``0},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Int32,System.Collections.Generic.IReadOnlyList{``0}})">
            <summary>Sets the shim of TestKitBase.ReceiveWhile(Func`2&lt;Object,!!0&gt; filter, Nullable`1&lt;TimeSpan&gt; max, Nullable`1&lt;TimeSpan&gt; idle, Int32 msgs)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ReceiveWhileOf1NullableOfTimeSpanFuncOfObjectM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Nullable{System.TimeSpan},System.Func{System.Object,``0},System.Int32,System.Collections.Generic.IReadOnlyList{``0}})">
            <summary>Sets the shim of TestKitBase.ReceiveWhile(Nullable`1&lt;TimeSpan&gt; max, Func`2&lt;Object,!!0&gt; filter, Int32 msgs)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ReceiveWhileOf1NullableOfTimeSpanNullableOfTimeSpanFuncOfObjectM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Func{System.Object,``0},System.Int32,System.Collections.Generic.IReadOnlyList{``0}})">
            <summary>Sets the shim of TestKitBase.ReceiveWhile(Nullable`1&lt;TimeSpan&gt; max, Nullable`1&lt;TimeSpan&gt; idle, Func`2&lt;Object,!!0&gt; filter, Int32 msgs)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ReceiveWhileOf1PredicateOfM0NullableOfTimeSpanNullableOfTimeSpanInt32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.Predicate{``0},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Int32,System.Boolean,System.Collections.Generic.IReadOnlyList{``0}})">
            <summary>Sets the shim of TestKitBase.ReceiveWhile(Predicate`1&lt;!!0&gt; shouldIgnore, Nullable`1&lt;TimeSpan&gt; max, Nullable`1&lt;TimeSpan&gt; idle, Int32 msgs, Boolean shouldIgnoreOtherMessageTypes)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.RemainingGet">
            <summary>Sets the shim of TestKitBase.get_Remaining()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.RemainingOrDefaultGet">
            <summary>Sets the shim of TestKitBase.get_RemainingOrDefault()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.RemainingOrDilatedNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.RemainingOrDilated(Nullable`1&lt;TimeSpan&gt; duration)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.RemainingOrTimeSpan">
            <summary>Sets the shim of TestKitBase.RemainingOr(TimeSpan duration)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.SetAutoPilotAutoPilot">
            <summary>Sets the shim of TestKitBase.SetAutoPilot(AutoPilot pilot)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ShutdownActorSystemNullableOfTimeSpanBoolean">
            <summary>Sets the shim of TestKitBase.Shutdown(ActorSystem system, Nullable`1&lt;TimeSpan&gt; duration, Boolean verifySystemShutdown)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.ShutdownNullableOfTimeSpanBoolean">
            <summary>Sets the shim of TestKitBase.Shutdown(Nullable`1&lt;TimeSpan&gt; duration, Boolean verifySystemShutdown)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.SingleExpectDefaultTimeoutGet">
            <summary>Sets the shim of TestKitBase.get_SingleExpectDefaultTimeout()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.SysGet">
            <summary>Sets the shim of TestKitBase.get_Sys()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.TestActorGet">
            <summary>Sets the shim of TestKitBase.get_TestActor()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.TestKitSettingsGet">
            <summary>Sets the shim of TestKitBase.get_TestKitSettings()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.TryReceiveOneMessageEnvelopeOutNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.TryReceiveOne(MessageEnvelope&amp; envelope, Nullable`1&lt;TimeSpan&gt; max)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.TryReceiveOneMessageEnvelopeOutNullableOfTimeSpanCancellationToken">
            <summary>Sets the shim of TestKitBase.TryReceiveOne(MessageEnvelope&amp; envelope, Nullable`1&lt;TimeSpan&gt; max, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.UnwatchIActorRef">
            <summary>Sets the shim of TestKitBase.Unwatch(IActorRef actorToUnwatch)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.WatchIActorRef">
            <summary>Sets the shim of TestKitBase.Watch(IActorRef actorToWatch)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.WithinOf1TimeSpanFuncOfM0NullableOfTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.TimeSpan,System.Func{``0},System.Nullable{System.TimeSpan},``0})">
            <summary>Sets the shim of TestKitBase.Within(TimeSpan max, Func`1&lt;!!0&gt; function, Nullable`1&lt;TimeSpan&gt; epsilonValue)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.WithinOf1TimeSpanTimeSpanFuncOfM0StringNullableOfTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.TestKitBase,System.TimeSpan,System.TimeSpan,System.Func{``0},System.String,System.Nullable{System.TimeSpan},``0})">
            <summary>Sets the shim of TestKitBase.Within(TimeSpan min, TimeSpan max, Func`1&lt;!!0&gt; function, String hint, Nullable`1&lt;TimeSpan&gt; epsilonValue)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.WithinTimeSpanActionNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.Within(TimeSpan max, Action action, Nullable`1&lt;TimeSpan&gt; epsilonValue)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances.WithinTimeSpanTimeSpanActionStringNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.Within(TimeSpan min, TimeSpan max, Action action, String hint, Nullable`1&lt;TimeSpan&gt; epsilonValue)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances._AwaitConditionb__83_0StringObjectArray">
            <summary>Sets the shim of TestKitBase.&lt;AwaitCondition&gt;b__83_0(String format, Object[] args)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AllInstances._AwaitConditionb__84_0StringObjectArray">
            <summary>Sets the shim of TestKitBase.&lt;AwaitCondition&gt;b__84_0(String format, Object[] args)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.AssertPredicateIsTrueForMessageOf1PredicateOfM0M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Predicate{``0},``0,System.String})">
            <summary>Sets the shim of TestKitBase.AssertPredicateIsTrueForMessage(Predicate`1&lt;!!0&gt; isMessage, !!0 m, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AssertPredicateIsTrueForSenderPredicateOfIActorRefIActorRefStringObject">
            <summary>Sets the shim of TestKitBase.AssertPredicateIsTrueForSender(Predicate`1&lt;IActorRef&gt; isSender, IActorRef sender, String hint, Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AssertionsFailStringObjectArrayString">
            <summary>Sets the shim of TestKitBase.AssertionsFail(String format, Object[] args, String message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AwaitAssertActionNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.AwaitAssert(Action assertion, Nullable`1&lt;TimeSpan&gt; duration, Nullable`1&lt;TimeSpan&gt; interval)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AwaitConditionFuncOfBoolean">
            <summary>Sets the shim of TestKitBase.AwaitCondition(Func`1&lt;Boolean&gt; conditionIsFulfilled)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AwaitConditionFuncOfBooleanNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.AwaitCondition(Func`1&lt;Boolean&gt; conditionIsFulfilled, Nullable`1&lt;TimeSpan&gt; max)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AwaitConditionFuncOfBooleanNullableOfTimeSpanNullableOfTimeSpanString">
            <summary>Sets the shim of TestKitBase.AwaitCondition(Func`1&lt;Boolean&gt; conditionIsFulfilled, Nullable`1&lt;TimeSpan&gt; max, Nullable`1&lt;TimeSpan&gt; interval, String message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AwaitConditionFuncOfBooleanNullableOfTimeSpanString">
            <summary>Sets the shim of TestKitBase.AwaitCondition(Func`1&lt;Boolean&gt; conditionIsFulfilled, Nullable`1&lt;TimeSpan&gt; max, String message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.AwaitConditionNoThrowFuncOfBooleanTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.AwaitConditionNoThrow(Func`1&lt;Boolean&gt; conditionIsFulfilled, TimeSpan max, Nullable`1&lt;TimeSpan&gt; interval)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.Bind(Akka.Actor.IActorRefFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.CheckMissingAndUnexpectedOf2IReadOnlyCollectionOfM0IReadOnlyCollectionOfM1StringStringBooleanString``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IReadOnlyCollection{``0},System.Collections.Generic.IReadOnlyCollection{``1},System.String,System.String,System.Boolean,System.String})">
            <summary>Sets the shim of TestKitBase.CheckMissingAndUnexpected(IReadOnlyCollection`1&lt;!!0&gt; missing, IReadOnlyCollection`1&lt;!!1&gt; unexpected, String missingMessage, String unexpectedMessage, Boolean shouldLog, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ConditionalLogBooleanStringObjectArray">
            <summary>Sets the shim of TestKitBase.ConditionalLog(Boolean shouldLog, String format, Object[] args)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ConditionalLogILoggingAdapterStringObjectArray">
            <summary>Sets the shim of TestKitBase.ConditionalLog(ILoggingAdapter logger, String format, Object[] args)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ConditionalLogStringObjectArray">
            <summary>Sets the shim of TestKitBase.ConditionalLog(String format, Object[] args)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ConstructorITestKitAssertionsActorSystemConfigStringString">
            <summary>Sets the shim of TestKitBase.TestKitBase(ITestKitAssertions assertions, ActorSystem system, Config config, String actorSystemName, String testActorName)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ConstructorITestKitAssertionsActorSystemString">
            <summary>Sets the shim of TestKitBase.TestKitBase(ITestKitAssertions assertions, ActorSystem system, String testActorName)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ConstructorITestKitAssertionsConfigStringString">
            <summary>Sets the shim of TestKitBase.TestKitBase(ITestKitAssertions assertions, Config config, String actorSystemName, String testActorName)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.CreateEventFilterActorSystem">
            <summary>Sets the shim of TestKitBase.CreateEventFilter(ActorSystem system)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.CreateTestActorActorSystemString">
            <summary>Sets the shim of TestKitBase.CreateTestActor(ActorSystem system, String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.CreateTestActorString">
            <summary>Sets the shim of TestKitBase.CreateTestActor(String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.CreateTestBarrierInt32">
            <summary>Sets the shim of TestKitBase.CreateTestBarrier(Int32 count)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.CreateTestLatchInt32">
            <summary>Sets the shim of TestKitBase.CreateTestLatch(Int32 count)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.CreateTestProbeActorSystemString">
            <summary>Sets the shim of TestKitBase.CreateTestProbe(ActorSystem system, String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.CreateTestProbeString">
            <summary>Sets the shim of TestKitBase.CreateTestProbe(String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.DefaultConfigGet">
            <summary>Sets the shim of TestKitBase.get_DefaultConfig()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.DilatedTimeSpan">
            <summary>Sets the shim of TestKitBase.Dilated(TimeSpan duration)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.EventFilterGet">
            <summary>Sets the shim of TestKitBase.get_EventFilter()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgAllOfOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Collections.Generic.IReadOnlyCollection{``0}})">
            <summary>Sets the shim of TestKitBase.ExpectMsgAllOf(!!0[] messages)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgAllOfOf1TimeSpanM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.TimeSpan,``0[],System.Collections.Generic.IReadOnlyCollection{``0}})">
            <summary>Sets the shim of TestKitBase.ExpectMsgAllOf(TimeSpan max, !!0[] messages)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgAnyOfOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsgAnyOf(!!0[] messages)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgFromOf1ActionOfIActorRefActionOfM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Action{Akka.Actor.IActorRef},System.Action{``0},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsgFrom(Action`1&lt;IActorRef&gt; assertSender, Action`1&lt;!!0&gt; assertMessage, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgFromOf1IActorRefActionOfM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.Actor.IActorRef,System.Action{``0},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsgFrom(IActorRef sender, Action`1&lt;!!0&gt; assertMessage, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgFromOf1IActorRefM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.Actor.IActorRef,``0,System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsgFrom(IActorRef sender, !!0 message, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgFromOf1IActorRefNullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.Actor.IActorRef,System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsgFrom(IActorRef sender, Nullable`1&lt;TimeSpan&gt; duration, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgFromOf1IActorRefPredicateOfM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.Actor.IActorRef,System.Predicate{``0},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsgFrom(IActorRef sender, Predicate`1&lt;!!0&gt; isMessage, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgFromOf1PredicateOfIActorRefPredicateOfM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Predicate{Akka.Actor.IActorRef},System.Predicate{``0},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsgFrom(Predicate`1&lt;IActorRef&gt; isSender, Predicate`1&lt;!!0&gt; isMessage, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgOf1ActionOfM0IActorRefNullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Action{``0,Akka.Actor.IActorRef},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsg(Action`2&lt;!!0,IActorRef&gt; assertMessageAndSender, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgOf1ActionOfM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Action{``0},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsg(Action`1&lt;!!0&gt; assert, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgOf1FuncOfM0IActorRefBooleanNullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0,Akka.Actor.IActorRef,System.Boolean},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsg(Func`3&lt;!!0,IActorRef,Boolean&gt; isMessageAndSender, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgOf1M0FuncOfM0M0BooleanNullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Func{``0,``0,System.Boolean},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsg(!!0 expected, Func`3&lt;!!0,!!0,Boolean&gt; comparer, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgOf1M0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsg(!!0 message, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgOf1NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsg(Nullable`1&lt;TimeSpan&gt; duration, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ExpectMsgOf1PredicateOfM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Predicate{``0},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.ExpectMsg(Predicate`1&lt;!!0&gt; isMessage, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ExpectNoMsg">
            <summary>Sets the shim of TestKitBase.ExpectNoMsg()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ExpectNoMsgInt32">
            <summary>Sets the shim of TestKitBase.ExpectNoMsg(Int32 milliseconds)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ExpectNoMsgTimeSpan">
            <summary>Sets the shim of TestKitBase.ExpectNoMsg(TimeSpan duration)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ExpectTerminatedIActorRefNullableOfTimeSpanString">
            <summary>Sets the shim of TestKitBase.ExpectTerminated(IActorRef target, Nullable`1&lt;TimeSpan&gt; timeout, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.FishForMessageOf1PredicateOfM0NullableOfTimeSpanString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Predicate{``0},System.Nullable{System.TimeSpan},System.String,``0})">
            <summary>Sets the shim of TestKitBase.FishForMessage(Predicate`1&lt;!!0&gt; isMessage, Nullable`1&lt;TimeSpan&gt; max, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.FishForMessagePredicateOfObjectNullableOfTimeSpanString">
            <summary>Sets the shim of TestKitBase.FishForMessage(Predicate`1&lt;Object&gt; isMessage, Nullable`1&lt;TimeSpan&gt; max, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.FormatWrongSenderMessageIActorRefStringString">
            <summary>Sets the shim of TestKitBase.FormatWrongSenderMessage(IActorRef actualSender, String expectedSender, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.FullDebugConfigGet">
            <summary>Sets the shim of TestKitBase.get_FullDebugConfig()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.GetTimeoutOrDefaultNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.GetTimeoutOrDefault(Nullable`1&lt;TimeSpan&gt; timeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.HasMessagesGet">
            <summary>Sets the shim of TestKitBase.get_HasMessages()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.IgnoreMessagesFuncOfObjectBoolean">
            <summary>Sets the shim of TestKitBase.IgnoreMessages(Func`2&lt;Object,Boolean&gt; shouldIgnoreMessage)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.IgnoreMessagesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of TestKitBase.IgnoreMessages()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.IgnoreMessagesOf1FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Func{``0,System.Boolean}})">
            <summary>Sets the shim of TestKitBase.IgnoreMessages(Func`2&lt;!!0,Boolean&gt; shouldIgnoreMessage)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.IgnoreNoMessages">
            <summary>Sets the shim of TestKitBase.IgnoreNoMessages()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.InitializeTestActorSystemConfigStringString">
            <summary>Sets the shim of TestKitBase.InitializeTest(ActorSystem system, Config config, String actorSystemName, String testActorName)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.InternalAwaitConditionFuncOfBooleanTimeSpanNullableOfTimeSpanActionOfStringObjectArray">
            <summary>Sets the shim of TestKitBase.InternalAwaitCondition(Func`1&lt;Boolean&gt; conditionIsFulfilled, TimeSpan max, Nullable`1&lt;TimeSpan&gt; interval, Action`2&lt;String,Object[]&gt; fail)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.InternalAwaitConditionFuncOfBooleanTimeSpanNullableOfTimeSpanActionOfStringObjectArrayILoggingAdapter">
            <summary>Sets the shim of TestKitBase.InternalAwaitCondition(Func`1&lt;Boolean&gt; conditionIsFulfilled, TimeSpan max, Nullable`1&lt;TimeSpan&gt; interval, Action`2&lt;String,Object[]&gt; fail, ILoggingAdapter logger)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.InternalExpectMsgAllOfOf1TimeSpanIReadOnlyCollectionOfM0FuncOfM0M0BooleanBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.TimeSpan,System.Collections.Generic.IReadOnlyCollection{``0},System.Func{``0,``0,System.Boolean},System.Boolean,System.Collections.Generic.IReadOnlyCollection{``0}})">
            <summary>Sets the shim of TestKitBase.InternalExpectMsgAllOf(TimeSpan max, IReadOnlyCollection`1&lt;!!0&gt; messages, Func`3&lt;!!0,!!0,Boolean&gt; areEqual, Boolean shouldLog)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.InternalExpectMsgAnyOfOf1TimeSpanM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.TimeSpan,``0[],``0})">
            <summary>Sets the shim of TestKitBase.InternalExpectMsgAnyOf(TimeSpan max, !!0[] messages)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.InternalExpectMsgEnvelopeOf1NullableOfTimeSpanActionOfM0ActionOfIActorRefString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Nullable{System.TimeSpan},System.Action{``0},System.Action{Akka.Actor.IActorRef},System.String,Akka.TestKit.MessageEnvelope})">
            <summary>Sets the shim of TestKitBase.InternalExpectMsgEnvelope(Nullable`1&lt;TimeSpan&gt; timeout, Action`1&lt;!!0&gt; msgAssert, Action`1&lt;IActorRef&gt; senderAssert, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.InternalExpectMsgEnvelopeOf1NullableOfTimeSpanActionOfM0IActorRefStringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Nullable{System.TimeSpan},System.Action{``0,Akka.Actor.IActorRef},System.String,System.Boolean,Akka.TestKit.MessageEnvelope})">
            <summary>Sets the shim of TestKitBase.InternalExpectMsgEnvelope(Nullable`1&lt;TimeSpan&gt; timeout, Action`2&lt;!!0,IActorRef&gt; assert, String hint, Boolean shouldLog)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.InternalExpectMsgOf1NullableOfTimeSpanActionOfM0ActionOfIActorRefString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Nullable{System.TimeSpan},System.Action{``0},System.Action{Akka.Actor.IActorRef},System.String,``0})">
            <summary>Sets the shim of TestKitBase.InternalExpectMsg(Nullable`1&lt;TimeSpan&gt; timeout, Action`1&lt;!!0&gt; msgAssert, Action`1&lt;IActorRef&gt; senderAssert, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.InternalExpectMsgOf1NullableOfTimeSpanActionOfM0IActorRefString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Nullable{System.TimeSpan},System.Action{``0,Akka.Actor.IActorRef},System.String,``0})">
            <summary>Sets the shim of TestKitBase.InternalExpectMsg(Nullable`1&lt;TimeSpan&gt; timeout, Action`2&lt;!!0,IActorRef&gt; assert, String hint)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.InternalExpectMsgOf1NullableOfTimeSpanActionOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Nullable{System.TimeSpan},System.Action{``0},System.String,``0})">
            <summary>Sets the shim of TestKitBase.InternalExpectMsg(Nullable`1&lt;TimeSpan&gt; timeout, Action`1&lt;!!0&gt; msgAssert, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.InternalExpectNoMsgTimeSpan">
            <summary>Sets the shim of TestKitBase.InternalExpectNoMsg(TimeSpan duration)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.InternalReceiveNInt32TimeSpanBoolean">
            <summary>Sets the shim of TestKitBase.InternalReceiveN(Int32 numberOfMessages, TimeSpan max, Boolean shouldLog)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.LastMessageGet">
            <summary>Sets the shim of TestKitBase.get_LastMessage()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.LastSenderGet">
            <summary>Sets the shim of TestKitBase.get_LastSender()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.LogGet">
            <summary>Sets the shim of TestKitBase.get_Log()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.NowGet">
            <summary>Sets the shim of TestKitBase.get_Now()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ReceiveNInt32">
            <summary>Sets the shim of TestKitBase.ReceiveN(Int32 numberOfMessages)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ReceiveNInt32TimeSpan">
            <summary>Sets the shim of TestKitBase.ReceiveN(Int32 numberOfMessages, TimeSpan max)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ReceiveOneCancellationToken">
            <summary>Sets the shim of TestKitBase.ReceiveOne(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ReceiveOneNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.ReceiveOne(Nullable`1&lt;TimeSpan&gt; max)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ReceiveWhileOf1FuncOfObjectM0NullableOfTimeSpanNullableOfTimeSpanInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Object,``0},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Int32,System.Collections.Generic.IReadOnlyList{``0}})">
            <summary>Sets the shim of TestKitBase.ReceiveWhile(Func`2&lt;Object,!!0&gt; filter, Nullable`1&lt;TimeSpan&gt; max, Nullable`1&lt;TimeSpan&gt; idle, Int32 msgs)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ReceiveWhileOf1NullableOfTimeSpanFuncOfObjectM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Nullable{System.TimeSpan},System.Func{System.Object,``0},System.Int32,System.Collections.Generic.IReadOnlyList{``0}})">
            <summary>Sets the shim of TestKitBase.ReceiveWhile(Nullable`1&lt;TimeSpan&gt; max, Func`2&lt;Object,!!0&gt; filter, Int32 msgs)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ReceiveWhileOf1NullableOfTimeSpanNullableOfTimeSpanFuncOfObjectM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Func{System.Object,``0},System.Int32,System.Collections.Generic.IReadOnlyList{``0}})">
            <summary>Sets the shim of TestKitBase.ReceiveWhile(Nullable`1&lt;TimeSpan&gt; max, Nullable`1&lt;TimeSpan&gt; idle, Func`2&lt;Object,!!0&gt; filter, Int32 msgs)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.ReceiveWhileOf1PredicateOfM0NullableOfTimeSpanNullableOfTimeSpanInt32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Predicate{``0},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Int32,System.Boolean,System.Collections.Generic.IReadOnlyList{``0}})">
            <summary>Sets the shim of TestKitBase.ReceiveWhile(Predicate`1&lt;!!0&gt; shouldIgnore, Nullable`1&lt;TimeSpan&gt; max, Nullable`1&lt;TimeSpan&gt; idle, Int32 msgs, Boolean shouldIgnoreOtherMessageTypes)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.RemainingGet">
            <summary>Sets the shim of TestKitBase.get_Remaining()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.RemainingOrDefaultGet">
            <summary>Sets the shim of TestKitBase.get_RemainingOrDefault()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.RemainingOrDilatedNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.RemainingOrDilated(Nullable`1&lt;TimeSpan&gt; duration)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.RemainingOrTimeSpan">
            <summary>Sets the shim of TestKitBase.RemainingOr(TimeSpan duration)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.SetAutoPilotAutoPilot">
            <summary>Sets the shim of TestKitBase.SetAutoPilot(AutoPilot pilot)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ShutdownActorSystemNullableOfTimeSpanBoolean">
            <summary>Sets the shim of TestKitBase.Shutdown(ActorSystem system, Nullable`1&lt;TimeSpan&gt; duration, Boolean verifySystemShutdown)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.ShutdownNullableOfTimeSpanBoolean">
            <summary>Sets the shim of TestKitBase.Shutdown(Nullable`1&lt;TimeSpan&gt; duration, Boolean verifySystemShutdown)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.SingleExpectDefaultTimeoutGet">
            <summary>Sets the shim of TestKitBase.get_SingleExpectDefaultTimeout()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.StaticConstructor">
            <summary>Sets the shim of TestKitBase.TestKitBase()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.SysGet">
            <summary>Sets the shim of TestKitBase.get_Sys()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.TestActorGet">
            <summary>Sets the shim of TestKitBase.get_TestActor()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.TestKitSettingsGet">
            <summary>Sets the shim of TestKitBase.get_TestKitSettings()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.UnwatchIActorRef">
            <summary>Sets the shim of TestKitBase.Unwatch(IActorRef actorToUnwatch)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.WatchIActorRef">
            <summary>Sets the shim of TestKitBase.Watch(IActorRef actorToWatch)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.WithinOf1TimeSpanFuncOfM0NullableOfTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.TimeSpan,System.Func{``0},System.Nullable{System.TimeSpan},``0})">
            <summary>Sets the shim of TestKitBase.Within(TimeSpan max, Func`1&lt;!!0&gt; function, Nullable`1&lt;TimeSpan&gt; epsilonValue)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitBase.WithinOf1TimeSpanTimeSpanFuncOfM0StringNullableOfTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.TimeSpan,System.TimeSpan,System.Func{``0},System.String,System.Nullable{System.TimeSpan},``0})">
            <summary>Sets the shim of TestKitBase.Within(TimeSpan min, TimeSpan max, Func`1&lt;!!0&gt; function, String hint, Nullable`1&lt;TimeSpan&gt; epsilonValue)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.WithinTimeSpanActionNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.Within(TimeSpan max, Action action, Nullable`1&lt;TimeSpan&gt; epsilonValue)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase.WithinTimeSpanTimeSpanActionStringNullableOfTimeSpan">
            <summary>Sets the shim of TestKitBase.Within(TimeSpan min, TimeSpan max, Action action, String hint, Nullable`1&lt;TimeSpan&gt; epsilonValue)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase._AwaitConditionb__83_0StringObjectArray">
            <summary>Sets the shim of TestKitBase.&lt;AwaitCondition&gt;b__83_0(String format, Object[] args)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitBase._AwaitConditionb__84_0StringObjectArray">
            <summary>Sets the shim of TestKitBase.&lt;AwaitCondition&gt;b__84_0(String format, Object[] args)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestKitExtension">
            <summary>Shim type of Akka.TestKit.TestKitExtension</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitExtension.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitExtension.#ctor(Akka.TestKit.TestKitExtension)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestKitExtension.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitExtension.AllInstances.CreateExtensionExtendedActorSystem">
            <summary>Sets the shim of TestKitExtension.CreateExtension(ExtendedActorSystem system)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitExtension.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitExtension.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitExtension.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitExtension.Bind(Akka.Actor.IExtensionId)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitExtension.Bind(Akka.Actor.IExtensionId{Akka.TestKit.TestKitSettings})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitExtension.Constructor">
            <summary>Sets the shim of TestKitExtension.TestKitExtension()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitExtension.CreateExtensionExtendedActorSystem">
            <summary>Sets the shim of TestKitExtension.CreateExtension(ExtendedActorSystem system)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitExtension.ForActorSystem">
            <summary>Sets the shim of TestKitExtension.For(ActorSystem system)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestKitSettings">
            <summary>Shim type of Akka.TestKit.TestKitSettings</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitSettings.#ctor(Akka.TestKit.TestKitSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestKitSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitSettings.AllInstances.DefaultTimeoutGet">
            <summary>Sets the shim of TestKitSettings.get_DefaultTimeout()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitSettings.AllInstances.LogTestKitCallsGet">
            <summary>Sets the shim of TestKitSettings.get_LogTestKitCalls()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitSettings.AllInstances.SingleExpectDefaultGet">
            <summary>Sets the shim of TestKitSettings.get_SingleExpectDefault()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitSettings.AllInstances.TestEventFilterLeewayGet">
            <summary>Sets the shim of TestKitSettings.get_TestEventFilterLeeway()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitSettings.AllInstances.TestTimeFactorGet">
            <summary>Sets the shim of TestKitSettings.get_TestTimeFactor()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestKitSettings.Bind(Akka.Actor.IExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitSettings.ConstructorConfig">
            <summary>Sets the shim of TestKitSettings.TestKitSettings(Config config)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitSettings.DefaultTimeoutGet">
            <summary>Sets the shim of TestKitSettings.get_DefaultTimeout()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitSettings.LogTestKitCallsGet">
            <summary>Sets the shim of TestKitSettings.get_LogTestKitCalls()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitSettings.SingleExpectDefaultGet">
            <summary>Sets the shim of TestKitSettings.get_SingleExpectDefault()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitSettings.TestEventFilterLeewayGet">
            <summary>Sets the shim of TestKitSettings.get_TestEventFilterLeeway()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestKitSettings.TestTimeFactorGet">
            <summary>Sets the shim of TestKitSettings.get_TestTimeFactor()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestLatch">
            <summary>Shim type of Akka.TestKit.TestLatch</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestLatch.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestLatch.#ctor(Akka.TestKit.TestLatch)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestLatch.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.AllInstances.CountDown">
            <summary>Sets the shim of TestLatch.CountDown()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.AllInstances.IsOpenGet">
            <summary>Sets the shim of TestLatch.get_IsOpen()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.AllInstances.Open">
            <summary>Sets the shim of TestLatch.Open()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.AllInstances.Ready">
            <summary>Sets the shim of TestLatch.Ready()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.AllInstances.ReadyTimeSpan">
            <summary>Sets the shim of TestLatch.Ready(TimeSpan timeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.AllInstances.Reset">
            <summary>Sets the shim of TestLatch.Reset()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestLatch.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestLatch.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.Constructor">
            <summary>Sets the shim of TestLatch.TestLatch()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.ConstructorFuncOfTimeSpanTimeSpanInt32TimeSpan">
            <summary>Sets the shim of TestLatch.TestLatch(Func`2&lt;TimeSpan,TimeSpan&gt; dilate, Int32 count, TimeSpan defaultTimeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.ConstructorFuncOfTimeSpanTimeSpanTimeSpanInt32">
            <summary>Sets the shim of TestLatch.TestLatch(Func`2&lt;TimeSpan,TimeSpan&gt; dilate, TimeSpan defaultTimeout, Int32 count)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.ConstructorInt32">
            <summary>Sets the shim of TestLatch.TestLatch(Int32 count)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.ConstructorInt32TimeSpan">
            <summary>Sets the shim of TestLatch.TestLatch(Int32 count, TimeSpan defaultTimeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.CountDown">
            <summary>Sets the shim of TestLatch.CountDown()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.IsOpenGet">
            <summary>Sets the shim of TestLatch.get_IsOpen()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.Open">
            <summary>Sets the shim of TestLatch.Open()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.Ready">
            <summary>Sets the shim of TestLatch.Ready()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.ReadyTimeSpan">
            <summary>Sets the shim of TestLatch.Ready(TimeSpan timeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.Reset">
            <summary>Sets the shim of TestLatch.Reset()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestLatch.StaticConstructor">
            <summary>Sets the shim of TestLatch.TestLatch()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestProbe">
            <summary>Shim type of Akka.TestKit.TestProbe</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestProbe.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestProbe.#ctor(Akka.TestKit.TestProbe)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AkkaActorICanTellTellObjectIActorRef">
            <summary>Sets the shim of TestProbe.Akka.Actor.ICanTell.Tell(Object message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AkkaActorIInternalActorRefGetChildIEnumerableOfString">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.GetChild(IEnumerable`1&lt;String&gt; name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AkkaActorIInternalActorRefRestartException">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.Restart(Exception cause)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AkkaActorIInternalActorRefResumeException">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.Resume(Exception causedByFailure)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AkkaActorIInternalActorRefStart">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.Start()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AkkaActorIInternalActorRefStop">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.Stop()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AkkaActorIInternalActorRefSuspend">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.Suspend()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AkkaUtilISurrogatedToSurrogateActorSystem">
            <summary>Sets the shim of TestProbe.Akka.Util.ISurrogated.ToSurrogate(ActorSystem system)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestProbe.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.AkkaActorICanTellTellObjectIActorRef">
            <summary>Sets the shim of TestProbe.Akka.Actor.ICanTell.Tell(Object message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.AkkaActorIInternalActorRefGetChildIEnumerableOfString">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.GetChild(IEnumerable`1&lt;String&gt; name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.AkkaActorIInternalActorRefRestartException">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.Restart(Exception cause)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.AkkaActorIInternalActorRefResumeException">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.Resume(Exception causedByFailure)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.AkkaActorIInternalActorRefStart">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.Start()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.AkkaActorIInternalActorRefStop">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.Stop()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.AkkaActorIInternalActorRefSuspend">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.Suspend()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.AkkaUtilISurrogatedToSurrogateActorSystem">
            <summary>Sets the shim of TestProbe.Akka.Util.ISurrogated.ToSurrogate(ActorSystem system)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.CompareToObject">
            <summary>Sets the shim of TestProbe.CompareTo(Object obj)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.CreateTestProbeString">
            <summary>Sets the shim of TestProbe.CreateTestProbe(String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.EqualsObject">
            <summary>Sets the shim of TestProbe.Equals(Object obj)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.ForwardIActorRef">
            <summary>Sets the shim of TestProbe.Forward(IActorRef actor)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.ForwardIActorRefObject">
            <summary>Sets the shim of TestProbe.Forward(IActorRef actor, Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.GetHashCode01">
            <summary>Sets the shim of TestProbe.GetHashCode()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.IsLocalAkkaActorIActorRefScopeget">
            <summary>Sets the shim of TestProbe.Akka.Actor.IActorRefScope.get_IsLocal()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.IsTerminatedAkkaActorIInternalActorRefget">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.get_IsTerminated()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.ParentAkkaActorIInternalActorRefget">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.get_Parent()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.PathAkkaActorIActorRefget">
            <summary>Sets the shim of TestProbe.Akka.Actor.IActorRef.get_Path()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.ProviderAkkaActorIInternalActorRefget">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.get_Provider()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.RefGet">
            <summary>Sets the shim of TestProbe.get_Ref()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.ReplyObject">
            <summary>Sets the shim of TestProbe.Reply(Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.SendIActorRefObject">
            <summary>Sets the shim of TestProbe.Send(IActorRef actor, Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.SendSystemMessageISystemMessage">
            <summary>Sets the shim of TestProbe.SendSystemMessage(ISystemMessage message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.SendSystemMessageISystemMessageIActorRef">
            <summary>Sets the shim of TestProbe.SendSystemMessage(ISystemMessage message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.SenderGet">
            <summary>Sets the shim of TestProbe.get_Sender()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.SystemIComparableAkkaActorIActorRefCompareToIActorRef">
            <summary>Sets the shim of TestProbe.System.IComparable&lt;Akka.Actor.IActorRef&gt;.CompareTo(IActorRef other)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.AllInstances.SystemIEquatableAkkaActorIActorRefEqualsIActorRef">
            <summary>Sets the shim of TestProbe.System.IEquatable&lt;Akka.Actor.IActorRef&gt;.Equals(IActorRef other)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestProbe.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestProbe.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestProbe.Bind(Akka.Actor.IActorRef)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestProbe.Bind(Akka.Actor.IActorRefFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestProbe.Bind(Akka.Actor.IActorRefScope)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestProbe.Bind(Akka.Actor.ICanTell)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestProbe.Bind(Akka.Actor.IInternalActorRef)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestProbe.Bind(Akka.Util.ISurrogated)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestProbe.Bind(Akka.TestKit.INoImplicitSender)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestProbe.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestProbe.Bind(System.IComparable{Akka.Actor.IActorRef})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestProbe.Bind(System.IEquatable{Akka.Actor.IActorRef})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.CompareToObject">
            <summary>Sets the shim of TestProbe.CompareTo(Object obj)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.ConstructorActorSystemITestKitAssertionsString">
            <summary>Sets the shim of TestProbe.TestProbe(ActorSystem system, ITestKitAssertions assertions, String testProbeName)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.CreateTestProbeString">
            <summary>Sets the shim of TestProbe.CreateTestProbe(String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.EqualsObject">
            <summary>Sets the shim of TestProbe.Equals(Object obj)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.ForwardIActorRef">
            <summary>Sets the shim of TestProbe.Forward(IActorRef actor)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.ForwardIActorRefObject">
            <summary>Sets the shim of TestProbe.Forward(IActorRef actor, Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.GetHashCode">
            <summary>Sets the shim of TestProbe.GetHashCode()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.IsLocalAkkaActorIActorRefScopeget">
            <summary>Sets the shim of TestProbe.Akka.Actor.IActorRefScope.get_IsLocal()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.IsTerminatedAkkaActorIInternalActorRefget">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.get_IsTerminated()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.ParentAkkaActorIInternalActorRefget">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.get_Parent()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.PathAkkaActorIActorRefget">
            <summary>Sets the shim of TestProbe.Akka.Actor.IActorRef.get_Path()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.ProviderAkkaActorIInternalActorRefget">
            <summary>Sets the shim of TestProbe.Akka.Actor.IInternalActorRef.get_Provider()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.RefGet">
            <summary>Sets the shim of TestProbe.get_Ref()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.ReplyObject">
            <summary>Sets the shim of TestProbe.Reply(Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.SendIActorRefObject">
            <summary>Sets the shim of TestProbe.Send(IActorRef actor, Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.SendSystemMessageISystemMessage">
            <summary>Sets the shim of TestProbe.SendSystemMessage(ISystemMessage message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.SendSystemMessageISystemMessageIActorRef">
            <summary>Sets the shim of TestProbe.SendSystemMessage(ISystemMessage message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.SenderGet">
            <summary>Sets the shim of TestProbe.get_Sender()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.SystemIComparableAkkaActorIActorRefCompareToIActorRef">
            <summary>Sets the shim of TestProbe.System.IComparable&lt;Akka.Actor.IActorRef&gt;.CompareTo(IActorRef other)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestProbe.SystemIEquatableAkkaActorIActorRefEqualsIActorRef">
            <summary>Sets the shim of TestProbe.System.IEquatable&lt;Akka.Actor.IActorRef&gt;.Equals(IActorRef other)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestScheduler">
            <summary>Shim type of Akka.TestKit.TestScheduler</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestScheduler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestScheduler.#ctor(Akka.TestKit.TestScheduler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AdvanceTimeSpan">
            <summary>Sets the shim of TestScheduler.Advance(TimeSpan offset)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AdvanceToDateTimeOffset">
            <summary>Sets the shim of TestScheduler.AdvanceTo(DateTimeOffset when)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AdvancedGet">
            <summary>Sets the shim of TestScheduler.get_Advanced()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.AdvanceTimeSpan">
            <summary>Sets the shim of TestScheduler.Advance(TimeSpan offset)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.AdvanceToDateTimeOffset">
            <summary>Sets the shim of TestScheduler.AdvanceTo(DateTimeOffset when)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.AdvancedGet">
            <summary>Sets the shim of TestScheduler.get_Advanced()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.HighResMonotonicClockGet">
            <summary>Sets the shim of TestScheduler.get_HighResMonotonicClock()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.InternalScheduleNullableOfTimeSpanTimeSpanICanTellObjectActionIActorRefICancelableInt32">
            <summary>Sets the shim of TestScheduler.InternalSchedule(Nullable`1&lt;TimeSpan&gt; initialDelay, TimeSpan delay, ICanTell receiver, Object message, Action action, IActorRef sender, ICancelable cancelable, Int32 deliveryCount)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.MonotonicClockGet">
            <summary>Sets the shim of TestScheduler.get_MonotonicClock()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.NowGet">
            <summary>Sets the shim of TestScheduler.get_Now()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.ScheduleOnceTimeSpanAction">
            <summary>Sets the shim of TestScheduler.ScheduleOnce(TimeSpan delay, Action action)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.ScheduleOnceTimeSpanActionICancelable">
            <summary>Sets the shim of TestScheduler.ScheduleOnce(TimeSpan delay, Action action, ICancelable cancelable)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.ScheduleRepeatedlyTimeSpanTimeSpanAction">
            <summary>Sets the shim of TestScheduler.ScheduleRepeatedly(TimeSpan initialDelay, TimeSpan interval, Action action)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.ScheduleRepeatedlyTimeSpanTimeSpanActionICancelable">
            <summary>Sets the shim of TestScheduler.ScheduleRepeatedly(TimeSpan initialDelay, TimeSpan interval, Action action, ICancelable cancelable)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.ScheduleTellOnceTimeSpanICanTellObjectIActorRef">
            <summary>Sets the shim of TestScheduler.ScheduleTellOnce(TimeSpan delay, ICanTell receiver, Object message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.ScheduleTellOnceTimeSpanICanTellObjectIActorRefICancelable">
            <summary>Sets the shim of TestScheduler.ScheduleTellOnce(TimeSpan delay, ICanTell receiver, Object message, IActorRef sender, ICancelable cancelable)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.ScheduleTellRepeatedlyTimeSpanTimeSpanICanTellObjectIActorRef">
            <summary>Sets the shim of TestScheduler.ScheduleTellRepeatedly(TimeSpan initialDelay, TimeSpan interval, ICanTell receiver, Object message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.ScheduleTellRepeatedlyTimeSpanTimeSpanICanTellObjectIActorRefICancelable">
            <summary>Sets the shim of TestScheduler.ScheduleTellRepeatedly(TimeSpan initialDelay, TimeSpan interval, ICanTell receiver, Object message, IActorRef sender, ICancelable cancelable)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.AllInstances.TimeNowGet">
            <summary>Sets the shim of TestScheduler.get_TimeNow()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestScheduler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestScheduler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestScheduler.Bind(Akka.Actor.IActionScheduler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestScheduler.Bind(Akka.Actor.IAdvancedScheduler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestScheduler.Bind(Akka.Actor.IScheduler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestScheduler.Bind(Akka.Actor.ITellScheduler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.ShimTestScheduler.Bind(Akka.Actor.ITimeProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.ConstructorConfigILoggingAdapter">
            <summary>Sets the shim of TestScheduler.TestScheduler(Config schedulerConfig, ILoggingAdapter log)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.HighResMonotonicClockGet">
            <summary>Sets the shim of TestScheduler.get_HighResMonotonicClock()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.InternalScheduleNullableOfTimeSpanTimeSpanICanTellObjectActionIActorRefICancelableInt32">
            <summary>Sets the shim of TestScheduler.InternalSchedule(Nullable`1&lt;TimeSpan&gt; initialDelay, TimeSpan delay, ICanTell receiver, Object message, Action action, IActorRef sender, ICancelable cancelable, Int32 deliveryCount)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.MonotonicClockGet">
            <summary>Sets the shim of TestScheduler.get_MonotonicClock()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.NowGet">
            <summary>Sets the shim of TestScheduler.get_Now()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.ScheduleOnceTimeSpanAction">
            <summary>Sets the shim of TestScheduler.ScheduleOnce(TimeSpan delay, Action action)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.ScheduleOnceTimeSpanActionICancelable">
            <summary>Sets the shim of TestScheduler.ScheduleOnce(TimeSpan delay, Action action, ICancelable cancelable)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.ScheduleRepeatedlyTimeSpanTimeSpanAction">
            <summary>Sets the shim of TestScheduler.ScheduleRepeatedly(TimeSpan initialDelay, TimeSpan interval, Action action)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.ScheduleRepeatedlyTimeSpanTimeSpanActionICancelable">
            <summary>Sets the shim of TestScheduler.ScheduleRepeatedly(TimeSpan initialDelay, TimeSpan interval, Action action, ICancelable cancelable)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.ScheduleTellOnceTimeSpanICanTellObjectIActorRef">
            <summary>Sets the shim of TestScheduler.ScheduleTellOnce(TimeSpan delay, ICanTell receiver, Object message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.ScheduleTellOnceTimeSpanICanTellObjectIActorRefICancelable">
            <summary>Sets the shim of TestScheduler.ScheduleTellOnce(TimeSpan delay, ICanTell receiver, Object message, IActorRef sender, ICancelable cancelable)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.ScheduleTellRepeatedlyTimeSpanTimeSpanICanTellObjectIActorRef">
            <summary>Sets the shim of TestScheduler.ScheduleTellRepeatedly(TimeSpan initialDelay, TimeSpan interval, ICanTell receiver, Object message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.ScheduleTellRepeatedlyTimeSpanTimeSpanICanTellObjectIActorRefICancelable">
            <summary>Sets the shim of TestScheduler.ScheduleTellRepeatedly(TimeSpan initialDelay, TimeSpan interval, ICanTell receiver, Object message, IActorRef sender, ICancelable cancelable)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.ShimTestScheduler.TimeNowGet">
            <summary>Sets the shim of TestScheduler.get_TimeNow()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubAutoPilot">
            <summary>Stub type of Akka.TestKit.AutoPilot</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubAutoPilot.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubAutoPilot.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubAutoPilot.InitializeStub">
            <summary>Initializes a new instance of type StubAutoPilot</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubAutoPilot.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubAutoPilot.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubAutoPilot.Run(Akka.Actor.IActorRef,System.Object)">
            <summary>Sets the stub of AutoPilot.Run(IActorRef sender, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubAutoPilot.RunIActorRefObject">
            <summary>Sets the stub of AutoPilot.Run(IActorRef sender, Object message)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubCallingThreadDispatcher">
            <summary>Stub type of Akka.TestKit.CallingThreadDispatcher</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubCallingThreadDispatcher.#ctor(Akka.Dispatch.MessageDispatcherConfigurator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubCallingThreadDispatcher.Attach(Akka.Actor.ActorCell)">
            <summary>Sets the stub of MessageDispatcher.Attach(ActorCell cell)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubCallingThreadDispatcher.AttachActorCell">
            <summary>Sets the stub of MessageDispatcher.Attach(ActorCell cell)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubCallingThreadDispatcher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubCallingThreadDispatcher.Detach(Akka.Actor.ActorCell)">
            <summary>Sets the stub of MessageDispatcher.Detach(ActorCell cell)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubCallingThreadDispatcher.DetachActorCell">
            <summary>Sets the stub of MessageDispatcher.Detach(ActorCell cell)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubCallingThreadDispatcher.Dispatch(Akka.Actor.ActorCell,Akka.Actor.Envelope)">
            <summary>Sets the stub of MessageDispatcher.Dispatch(ActorCell cell, Envelope envelope)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubCallingThreadDispatcher.DispatchActorCellEnvelope">
            <summary>Sets the stub of MessageDispatcher.Dispatch(ActorCell cell, Envelope envelope)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubCallingThreadDispatcher.ExecuteTask(Akka.Dispatch.IRunnable)">
            <summary>Sets the stub of CallingThreadDispatcher.ExecuteTask(IRunnable run)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubCallingThreadDispatcher.ExecuteTaskIRunnable">
            <summary>Sets the stub of CallingThreadDispatcher.ExecuteTask(IRunnable run)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubCallingThreadDispatcher.InitializeStub">
            <summary>Initializes a new instance of type StubCallingThreadDispatcher</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubCallingThreadDispatcher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubCallingThreadDispatcher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubCallingThreadDispatcher.Shutdown">
            <summary>Sets the stub of CallingThreadDispatcher.Shutdown()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubCallingThreadDispatcher.Shutdown01">
            <summary>Sets the stub of CallingThreadDispatcher.Shutdown()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubCallingThreadDispatcher.SystemDispatch(Akka.Actor.ActorCell,Akka.Dispatch.SysMsg.SystemMessage)">
            <summary>Sets the stub of MessageDispatcher.SystemDispatch(ActorCell cell, SystemMessage message)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubCallingThreadDispatcher.SystemDispatchActorCellSystemMessage">
            <summary>Sets the stub of MessageDispatcher.SystemDispatch(ActorCell cell, SystemMessage message)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubCallingThreadDispatcherConfigurator">
            <summary>Stub type of Akka.TestKit.CallingThreadDispatcherConfigurator</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubCallingThreadDispatcherConfigurator.#ctor(Akka.Configuration.Config,Akka.Dispatch.IDispatcherPrerequisites)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubCallingThreadDispatcherConfigurator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubCallingThreadDispatcherConfigurator.Dispatcher">
            <summary>Sets the stub of CallingThreadDispatcherConfigurator.Dispatcher()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubCallingThreadDispatcherConfigurator.Dispatcher01">
            <summary>Sets the stub of CallingThreadDispatcherConfigurator.Dispatcher()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubCallingThreadDispatcherConfigurator.InitializeStub">
            <summary>Initializes a new instance of type StubCallingThreadDispatcherConfigurator</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubCallingThreadDispatcherConfigurator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubCallingThreadDispatcherConfigurator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubEventFilterFactory">
            <summary>Stub type of Akka.TestKit.EventFilterFactory</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubEventFilterFactory.#ctor(Akka.TestKit.TestKitBase)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubEventFilterFactory.#ctor(Akka.TestKit.TestKitBase,Akka.Actor.ActorSystem)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubEventFilterFactory.#ctor(Akka.TestKit.TestKitBase,Akka.Actor.ActorSystem,System.Collections.Generic.IReadOnlyList{Akka.TestKit.Internal.EventFilterBase})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubEventFilterFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubEventFilterFactory.InitializeStub">
            <summary>Initializes a new instance of type StubEventFilterFactory</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubEventFilterFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubEventFilterFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubIEventFilter">
            <summary>Stub type of Akka.TestKit.IEventFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilter.#ctor">
            <summary>Initializes a new instance of type StubIEventFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilter.Akka#TestKit#IEventFilter#Apply(Akka.Event.LogEvent)">
            <summary>Sets the stub of IEventFilter.Apply(LogEvent logEvent)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubIEventFilter.ApplyLogEvent">
            <summary>Sets the stub of IEventFilter.Apply(LogEvent logEvent)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubIEventFilterApplier">
            <summary>Stub type of Akka.TestKit.IEventFilterApplier</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.#ctor">
            <summary>Initializes a new instance of type StubIEventFilterApplier</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.Akka#TestKit#IEventFilterApplier#Expect``1(System.Int32,System.Func{``0})">
            <summary>Sets the stub of IEventFilterApplier.Expect(Int32 expectedCount, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.Akka#TestKit#IEventFilterApplier#Expect``1(System.Int32,System.TimeSpan,System.Func{``0})">
            <summary>Sets the stub of IEventFilterApplier.Expect(Int32 expectedCount, TimeSpan timeout, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.Akka#TestKit#IEventFilterApplier#Expect(System.Int32,System.Action)">
            <summary>Sets the stub of IEventFilterApplier.Expect(Int32 expectedCount, Action action)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.Akka#TestKit#IEventFilterApplier#Expect(System.Int32,System.TimeSpan,System.Action)">
            <summary>Sets the stub of IEventFilterApplier.Expect(Int32 expectedCount, TimeSpan timeout, Action action)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.Akka#TestKit#IEventFilterApplier#ExpectOne``1(System.Func{``0})">
            <summary>Sets the stub of IEventFilterApplier.ExpectOne(Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.Akka#TestKit#IEventFilterApplier#ExpectOne(System.TimeSpan,System.Action)">
            <summary>Sets the stub of IEventFilterApplier.ExpectOne(TimeSpan timeout, Action action)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.Akka#TestKit#IEventFilterApplier#ExpectOne``1(System.TimeSpan,System.Func{``0})">
            <summary>Sets the stub of IEventFilterApplier.ExpectOne(TimeSpan timeout, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.Akka#TestKit#IEventFilterApplier#ExpectOne(System.Action)">
            <summary>Sets the stub of IEventFilterApplier.ExpectOne(Action action)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.Akka#TestKit#IEventFilterApplier#Mute(System.Action)">
            <summary>Sets the stub of IEventFilterApplier.Mute(Action action)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.Akka#TestKit#IEventFilterApplier#Mute``1(System.Func{``0})">
            <summary>Sets the stub of IEventFilterApplier.Mute(Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.Akka#TestKit#IEventFilterApplier#Mute">
            <summary>Sets the stub of IEventFilterApplier.Mute()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubIEventFilterApplier.Akka#TestKit#IEventFilterApplier#And">
            <summary>Sets the stub of IEventFilterApplier.get_And()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubIEventFilterApplier.AndGet">
            <summary>Sets the stub of IEventFilterApplier.get_And()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubIEventFilterApplier.ExpectInt32Action">
            <summary>Sets the stub of IEventFilterApplier.Expect(Int32 expectedCount, Action action)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubIEventFilterApplier.ExpectInt32TimeSpanAction">
            <summary>Sets the stub of IEventFilterApplier.Expect(Int32 expectedCount, TimeSpan timeout, Action action)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.ExpectOf1Int32FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Func{``0},``0})">
            <summary>Sets stubs of Expect(Int32 expectedCount, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.ExpectOf1Int32TimeSpanFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.TimeSpan,System.Func{``0},``0})">
            <summary>Sets stubs of Expect(Int32 expectedCount, TimeSpan timeout, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubIEventFilterApplier.ExpectOneAction">
            <summary>Sets the stub of IEventFilterApplier.ExpectOne(Action action)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.ExpectOneOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>Sets stubs of ExpectOne(Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.ExpectOneOf1TimeSpanFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.TimeSpan,System.Func{``0},``0})">
            <summary>Sets stubs of ExpectOne(TimeSpan timeout, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubIEventFilterApplier.ExpectOneTimeSpanAction">
            <summary>Sets the stub of IEventFilterApplier.ExpectOne(TimeSpan timeout, Action action)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubIEventFilterApplier.Mute">
            <summary>Sets the stub of IEventFilterApplier.Mute()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubIEventFilterApplier.MuteAction">
            <summary>Sets the stub of IEventFilterApplier.Mute(Action action)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIEventFilterApplier.MuteOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>Sets stubs of Mute(Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubINoImplicitSender">
            <summary>Stub type of Akka.TestKit.INoImplicitSender</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubINoImplicitSender.#ctor">
            <summary>Initializes a new instance of type StubINoImplicitSender</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubITestKitAssertions">
            <summary>Stub type of Akka.TestKit.ITestKitAssertions</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubITestKitAssertions.#ctor">
            <summary>Initializes a new instance of type StubITestKitAssertions</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubITestKitAssertions.Akka#TestKit#ITestKitAssertions#AssertEqual``1(``0,``0,System.String,System.Object[])">
            <summary>Sets the stub of ITestKitAssertions.AssertEqual(!!0 expected, !!0 actual, String format, Object[] args)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubITestKitAssertions.Akka#TestKit#ITestKitAssertions#AssertEqual``1(``0,``0,System.Func{``0,``0,System.Boolean},System.String,System.Object[])">
            <summary>Sets the stub of ITestKitAssertions.AssertEqual(!!0 expected, !!0 actual, Func`3&lt;!!0,!!0,Boolean&gt; comparer, String format, Object[] args)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubITestKitAssertions.Akka#TestKit#ITestKitAssertions#AssertFalse(System.Boolean,System.String,System.Object[])">
            <summary>Sets the stub of ITestKitAssertions.AssertFalse(Boolean condition, String format, Object[] args)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubITestKitAssertions.Akka#TestKit#ITestKitAssertions#AssertTrue(System.Boolean,System.String,System.Object[])">
            <summary>Sets the stub of ITestKitAssertions.AssertTrue(Boolean condition, String format, Object[] args)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubITestKitAssertions.Akka#TestKit#ITestKitAssertions#Fail(System.String,System.Object[])">
            <summary>Sets the stub of ITestKitAssertions.Fail(String format, Object[] args)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubITestKitAssertions.AssertEqualOf1M0M0FuncOfM0M0BooleanStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``0,System.Func{``0,``0,System.Boolean},System.String,System.Object[]})">
            <summary>Sets stubs of AssertEqual(!!0 expected, !!0 actual, Func`3&lt;!!0,!!0,Boolean&gt; comparer, String format, Object[] args)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubITestKitAssertions.AssertEqualOf1M0M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``0,System.String,System.Object[]})">
            <summary>Sets stubs of AssertEqual(!!0 expected, !!0 actual, String format, Object[] args)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubITestKitAssertions.AssertFalseBooleanStringObjectArray">
            <summary>Sets the stub of ITestKitAssertions.AssertFalse(Boolean condition, String format, Object[] args)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubITestKitAssertions.AssertTrueBooleanStringObjectArray">
            <summary>Sets the stub of ITestKitAssertions.AssertTrue(Boolean condition, String format, Object[] args)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubITestKitAssertions.FailStringObjectArray">
            <summary>Sets the stub of ITestKitAssertions.Fail(String format, Object[] args)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubIUnmutableFilter">
            <summary>Stub type of Akka.TestKit.IUnmutableFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIUnmutableFilter.#ctor">
            <summary>Initializes a new instance of type StubIUnmutableFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIUnmutableFilter.Akka#TestKit#IUnmutableFilter#Unmute">
            <summary>Sets the stub of IUnmutableFilter.Unmute()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubIUnmutableFilter.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubIUnmutableFilter.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubIUnmutableFilter.Unmute">
            <summary>Sets the stub of IUnmutableFilter.Unmute()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubMessageEnvelope">
            <summary>Stub type of Akka.TestKit.MessageEnvelope</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubMessageEnvelope.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubMessageEnvelope.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubMessageEnvelope.InitializeStub">
            <summary>Initializes a new instance of type StubMessageEnvelope</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubMessageEnvelope.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubMessageEnvelope.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubMessageEnvelope.Message">
            <summary>Sets the stub of MessageEnvelope.get_Message()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubMessageEnvelope.MessageGet">
            <summary>Sets the stub of MessageEnvelope.get_Message()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubMessageEnvelope.Sender">
            <summary>Sets the stub of MessageEnvelope.get_Sender()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubMessageEnvelope.SenderGet">
            <summary>Sets the stub of MessageEnvelope.get_Sender()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubRealMessageEnvelope">
            <summary>Stub type of Akka.TestKit.RealMessageEnvelope</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubRealMessageEnvelope.#ctor(System.Object,Akka.Actor.IActorRef)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubRealMessageEnvelope.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubRealMessageEnvelope.InitializeStub">
            <summary>Initializes a new instance of type StubRealMessageEnvelope</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubRealMessageEnvelope.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubRealMessageEnvelope.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubRealMessageEnvelope.Message">
            <summary>Sets the stub of RealMessageEnvelope.get_Message()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubRealMessageEnvelope.MessageGet">
            <summary>Sets the stub of RealMessageEnvelope.get_Message()</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubRealMessageEnvelope.Sender">
            <summary>Sets the stub of RealMessageEnvelope.get_Sender()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubRealMessageEnvelope.SenderGet">
            <summary>Sets the stub of RealMessageEnvelope.get_Sender()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubRealMessageEnvelope.ToString">
            <summary>Sets the stub of RealMessageEnvelope.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubRealMessageEnvelope.ToString01">
            <summary>Sets the stub of RealMessageEnvelope.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubTestActorRef`1">
            <summary>Stub type of Akka.TestKit.TestActorRef`1</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestActorRef`1.#ctor(Akka.Actor.ActorSystem,Akka.Actor.Props,Akka.Actor.IActorRef,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestActorRef`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestActorRef`1.Equals(System.Object)">
            <summary>Sets the stub of TestActorRefBase`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestActorRef`1.EqualsObject">
            <summary>Sets the stub of TestActorRefBase`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestActorRef`1.GetHashCode">
            <summary>Sets the stub of TestActorRefBase`1.GetHashCode()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestActorRef`1.GetHashCode01">
            <summary>Sets the stub of TestActorRefBase`1.GetHashCode()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestActorRef`1.InitializeStub">
            <summary>Initializes a new instance of type StubTestActorRef</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestActorRef`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestActorRef`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestActorRef`1.ToString">
            <summary>Sets the stub of TestActorRefBase`1.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestActorRef`1.ToString01">
            <summary>Sets the stub of TestActorRefBase`1.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubTestActorRefBase`1">
            <summary>Stub type of Akka.TestKit.TestActorRefBase`1</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestActorRefBase`1.#ctor(Akka.Actor.ActorSystem,Akka.Actor.Props,Akka.Actor.IActorRef,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestActorRefBase`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestActorRefBase`1.Equals(System.Object)">
            <summary>Sets the stub of TestActorRefBase`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestActorRefBase`1.EqualsObject">
            <summary>Sets the stub of TestActorRefBase`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestActorRefBase`1.GetHashCode">
            <summary>Sets the stub of TestActorRefBase`1.GetHashCode()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestActorRefBase`1.GetHashCode01">
            <summary>Sets the stub of TestActorRefBase`1.GetHashCode()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestActorRefBase`1.InitializeStub">
            <summary>Initializes a new instance of type StubTestActorRefBase</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestActorRefBase`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestActorRefBase`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestActorRefBase`1.ToString">
            <summary>Sets the stub of TestActorRefBase`1.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestActorRefBase`1.ToString01">
            <summary>Sets the stub of TestActorRefBase`1.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubTestBarrier">
            <summary>Stub type of Akka.TestKit.TestBarrier</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestBarrier.#ctor(Akka.TestKit.TestKitBase,System.Int32,System.Nullable{System.TimeSpan})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestBarrier.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestBarrier.InitializeStub">
            <summary>Initializes a new instance of type StubTestBarrier</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestBarrier.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestBarrier.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubTestBreaker">
            <summary>Stub type of Akka.TestKit.TestBreaker</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestBreaker.#ctor(Akka.Pattern.CircuitBreaker)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestBreaker.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestBreaker.InitializeStub">
            <summary>Initializes a new instance of type StubTestBreaker</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestBreaker.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestBreaker.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubTestEventListener">
            <summary>Stub type of Akka.TestKit.TestEventListener</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.AroundPostRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.AroundPostRestart(Exception cause, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestEventListener.AroundPostRestartExceptionObject">
            <summary>Sets the stub of ActorBase.AroundPostRestart(Exception cause, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.AroundPostStop">
            <summary>Sets the stub of ActorBase.AroundPostStop()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestEventListener.AroundPostStop01">
            <summary>Sets the stub of ActorBase.AroundPostStop()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.AroundPreRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.AroundPreRestart(Exception cause, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestEventListener.AroundPreRestartExceptionObject">
            <summary>Sets the stub of ActorBase.AroundPreRestart(Exception cause, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.AroundPreStart">
            <summary>Sets the stub of ActorBase.AroundPreStart()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestEventListener.AroundPreStart01">
            <summary>Sets the stub of ActorBase.AroundPreStart()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.AroundReceive(Akka.Actor.Receive,System.Object)">
            <summary>Sets the stub of ActorBase.AroundReceive(Receive receive, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestEventListener.AroundReceiveReceiveObject">
            <summary>Sets the stub of ActorBase.AroundReceive(Receive receive, Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestEventListener.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.InitializeStub">
            <summary>Initializes a new instance of type StubTestEventListener</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestEventListener.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestEventListener.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.PostRestart(System.Exception)">
            <summary>Sets the stub of ActorBase.PostRestart(Exception reason)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestEventListener.PostRestartException">
            <summary>Sets the stub of ActorBase.PostRestart(Exception reason)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.PostStop">
            <summary>Sets the stub of ActorBase.PostStop()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestEventListener.PostStop01">
            <summary>Sets the stub of ActorBase.PostStop()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.PreRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.PreRestart(Exception reason, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestEventListener.PreRestartExceptionObject">
            <summary>Sets the stub of ActorBase.PreRestart(Exception reason, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.PreStart">
            <summary>Sets the stub of ActorBase.PreStart()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestEventListener.PreStart01">
            <summary>Sets the stub of ActorBase.PreStart()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.Print(Akka.Event.LogEvent)">
            <summary>Sets the stub of DefaultLogger.Print(LogEvent logEvent)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestEventListener.PrintLogEvent">
            <summary>Sets the stub of DefaultLogger.Print(LogEvent logEvent)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.Receive(System.Object)">
            <summary>Sets the stub of TestEventListener.Receive(Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestEventListener.ReceiveObject">
            <summary>Sets the stub of TestEventListener.Receive(Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.SupervisorStrategy">
            <summary>Sets the stub of ActorBase.SupervisorStrategy()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestEventListener.SupervisorStrategy01">
            <summary>Sets the stub of ActorBase.SupervisorStrategy()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestEventListener.Unhandled(System.Object)">
            <summary>Sets the stub of ActorBase.Unhandled(Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestEventListener.UnhandledObject">
            <summary>Sets the stub of ActorBase.Unhandled(Object message)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubTestFSMRef`3">
            <summary>Stub type of Akka.TestKit.TestFSMRef`3</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestFSMRef`3.#ctor(Akka.Actor.ActorSystem,Akka.Actor.Props,Akka.Actor.IActorRef,System.String,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestFSMRef`3.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestFSMRef`3.Equals(System.Object)">
            <summary>Sets the stub of TestActorRefBase`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestFSMRef`3.EqualsObject">
            <summary>Sets the stub of TestActorRefBase`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestFSMRef`3.GetHashCode">
            <summary>Sets the stub of TestActorRefBase`1.GetHashCode()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestFSMRef`3.GetHashCode01">
            <summary>Sets the stub of TestActorRefBase`1.GetHashCode()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestFSMRef`3.InitializeStub">
            <summary>Initializes a new instance of type StubTestFSMRef</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestFSMRef`3.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestFSMRef`3.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestFSMRef`3.ToString">
            <summary>Sets the stub of TestActorRefBase`1.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestFSMRef`3.ToString01">
            <summary>Sets the stub of TestActorRefBase`1.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubTestKitAssertionsExtension">
            <summary>Stub type of Akka.TestKit.TestKitAssertionsExtension</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitAssertionsExtension.#ctor(Akka.TestKit.ITestKitAssertions)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitAssertionsExtension.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitAssertionsExtension.CreateExtension(Akka.Actor.ExtendedActorSystem)">
            <summary>Sets the stub of TestKitAssertionsExtension.CreateExtension(ExtendedActorSystem system)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestKitAssertionsExtension.CreateExtensionExtendedActorSystem">
            <summary>Sets the stub of TestKitAssertionsExtension.CreateExtension(ExtendedActorSystem system)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitAssertionsExtension.Equals(System.Object)">
            <summary>Sets the stub of ExtensionIdProvider`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestKitAssertionsExtension.EqualsObject">
            <summary>Sets the stub of ExtensionIdProvider`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitAssertionsExtension.GetHashCode">
            <summary>Sets the stub of ExtensionIdProvider`1.GetHashCode()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestKitAssertionsExtension.GetHashCode01">
            <summary>Sets the stub of ExtensionIdProvider`1.GetHashCode()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitAssertionsExtension.InitializeStub">
            <summary>Initializes a new instance of type StubTestKitAssertionsExtension</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitAssertionsExtension.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitAssertionsExtension.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubTestKitAssertionsProvider">
            <summary>Stub type of Akka.TestKit.TestKitAssertionsProvider</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitAssertionsProvider.#ctor(Akka.TestKit.ITestKitAssertions)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitAssertionsProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitAssertionsProvider.InitializeStub">
            <summary>Initializes a new instance of type StubTestKitAssertionsProvider</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitAssertionsProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitAssertionsProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubTestKitBase">
            <summary>Stub type of Akka.TestKit.TestKitBase</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitBase.#ctor(Akka.TestKit.ITestKitAssertions,Akka.Actor.ActorSystem,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitBase.#ctor(Akka.TestKit.ITestKitAssertions,Akka.Configuration.Config,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitBase.CreateTestLatch(System.Int32)">
            <summary>Sets the stub of TestKitBase.CreateTestLatch(Int32 count)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestKitBase.CreateTestLatchInt32">
            <summary>Sets the stub of TestKitBase.CreateTestLatch(Int32 count)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitBase.CreateTestProbe(System.String)">
            <summary>Sets the stub of TestKitBase.CreateTestProbe(String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitBase.CreateTestProbe(Akka.Actor.ActorSystem,System.String)">
            <summary>Sets the stub of TestKitBase.CreateTestProbe(ActorSystem system, String name)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestKitBase.CreateTestProbeActorSystemString">
            <summary>Sets the stub of TestKitBase.CreateTestProbe(ActorSystem system, String name)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestKitBase.CreateTestProbeString">
            <summary>Sets the stub of TestKitBase.CreateTestProbe(String name)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitBase.InitializeStub">
            <summary>Initializes a new instance of type StubTestKitBase</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitBase.Shutdown(System.Nullable{System.TimeSpan},System.Boolean)">
            <summary>Sets the stub of TestKitBase.Shutdown(Nullable`1&lt;TimeSpan&gt; duration, Boolean verifySystemShutdown)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitBase.Shutdown(Akka.Actor.ActorSystem,System.Nullable{System.TimeSpan},System.Boolean)">
            <summary>Sets the stub of TestKitBase.Shutdown(ActorSystem system, Nullable`1&lt;TimeSpan&gt; duration, Boolean verifySystemShutdown)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestKitBase.ShutdownActorSystemNullableOfTimeSpanBoolean">
            <summary>Sets the stub of TestKitBase.Shutdown(ActorSystem system, Nullable`1&lt;TimeSpan&gt; duration, Boolean verifySystemShutdown)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestKitBase.ShutdownNullableOfTimeSpanBoolean">
            <summary>Sets the stub of TestKitBase.Shutdown(Nullable`1&lt;TimeSpan&gt; duration, Boolean verifySystemShutdown)</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubTestKitExtension">
            <summary>Stub type of Akka.TestKit.TestKitExtension</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitExtension.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitExtension.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitExtension.CreateExtension(Akka.Actor.ExtendedActorSystem)">
            <summary>Sets the stub of TestKitExtension.CreateExtension(ExtendedActorSystem system)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestKitExtension.CreateExtensionExtendedActorSystem">
            <summary>Sets the stub of TestKitExtension.CreateExtension(ExtendedActorSystem system)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitExtension.Equals(System.Object)">
            <summary>Sets the stub of ExtensionIdProvider`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestKitExtension.EqualsObject">
            <summary>Sets the stub of ExtensionIdProvider`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitExtension.GetHashCode">
            <summary>Sets the stub of ExtensionIdProvider`1.GetHashCode()</summary>
        </member>
        <member name="F:Akka.TestKit.Fakes.StubTestKitExtension.GetHashCode01">
            <summary>Sets the stub of ExtensionIdProvider`1.GetHashCode()</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitExtension.InitializeStub">
            <summary>Initializes a new instance of type StubTestKitExtension</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitExtension.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitExtension.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubTestKitSettings">
            <summary>Stub type of Akka.TestKit.TestKitSettings</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitSettings.#ctor(Akka.Configuration.Config)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitSettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestKitSettings.InitializeStub">
            <summary>Initializes a new instance of type StubTestKitSettings</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitSettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestKitSettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubTestLatch">
            <summary>Stub type of Akka.TestKit.TestLatch</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestLatch.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestLatch.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestLatch.#ctor(System.Int32,System.TimeSpan)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestLatch.#ctor(System.Func{System.TimeSpan,System.TimeSpan},System.TimeSpan,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestLatch.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestLatch.InitializeStub">
            <summary>Initializes a new instance of type StubTestLatch</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestLatch.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestLatch.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Akka.TestKit.Fakes.StubTestScheduler">
            <summary>Stub type of Akka.TestKit.TestScheduler</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestScheduler.#ctor(Akka.Configuration.Config,Akka.Event.ILoggingAdapter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestScheduler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Fakes.StubTestScheduler.InitializeStub">
            <summary>Initializes a new instance of type StubTestScheduler</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestScheduler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Fakes.StubTestScheduler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1">
            <summary>Shim type of Akka.TestKit.Internal.BlockingCollectionTestActorQueue`1</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.#ctor(Akka.TestKit.Internal.BlockingCollectionTestActorQueue{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.AllInstances.EnqueueT0">
            <summary>Sets the shim of BlockingCollectionTestActorQueue`1.Enqueue(!0 item)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.AllInstances.GetAll">
            <summary>Sets the shim of BlockingCollectionTestActorQueue`1.GetAll()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.AllInstances.ToList">
            <summary>Sets the shim of BlockingCollectionTestActorQueue`1.ToList()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.Bind(Akka.TestKit.Internal.ITestActorQueueProducer{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.Bind(Akka.TestKit.Internal.ITestActorQueue{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.ConstructorBlockingQueueOfT0">
            <summary>Sets the shim of BlockingCollectionTestActorQueue`1.BlockingCollectionTestActorQueue`1(BlockingQueue`1&lt;!0&gt; queue)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.EnqueueT0">
            <summary>Sets the shim of BlockingCollectionTestActorQueue`1.Enqueue(!0 item)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.GetAll">
            <summary>Sets the shim of BlockingCollectionTestActorQueue`1.GetAll()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingCollectionTestActorQueue`1.ToList">
            <summary>Sets the shim of BlockingCollectionTestActorQueue`1.ToList()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1">
            <summary>Shim type of Akka.TestKit.Internal.BlockingQueue`1</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.#ctor(Akka.TestKit.Internal.BlockingQueue{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.AddFirstT0">
            <summary>Sets the shim of BlockingQueue`1.AddFirst(!0 item)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.AllInstances.AddFirstT0">
            <summary>Sets the shim of BlockingQueue`1.AddFirst(!0 item)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.AllInstances.CountGet">
            <summary>Sets the shim of BlockingQueue`1.get_Count()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.AllInstances.EnqueueT0">
            <summary>Sets the shim of BlockingQueue`1.Enqueue(!0 item)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.AllInstances.TakeCancellationToken">
            <summary>Sets the shim of BlockingQueue`1.Take(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.AllInstances.ToList">
            <summary>Sets the shim of BlockingQueue`1.ToList()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.AllInstances.TryEnqueueT0Int32CancellationToken">
            <summary>Sets the shim of BlockingQueue`1.TryEnqueue(!0 item, Int32 millisecondsTimeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.AllInstances.TryTakeT0Out">
            <summary>Sets the shim of BlockingQueue`1.TryTake(!0&amp; item)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.AllInstances.TryTakeT0OutInt32CancellationToken">
            <summary>Sets the shim of BlockingQueue`1.TryTake(!0&amp; item, Int32 millisecondsTimeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.Constructor">
            <summary>Sets the shim of BlockingQueue`1.BlockingQueue`1()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.CountGet">
            <summary>Sets the shim of BlockingQueue`1.get_Count()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.EnqueueT0">
            <summary>Sets the shim of BlockingQueue`1.Enqueue(!0 item)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.TakeCancellationToken">
            <summary>Sets the shim of BlockingQueue`1.Take(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.ToList">
            <summary>Sets the shim of BlockingQueue`1.ToList()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.TryEnqueueT0Int32CancellationToken">
            <summary>Sets the shim of BlockingQueue`1.TryEnqueue(!0 item, Int32 millisecondsTimeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimBlockingQueue`1.TryTakeT0Out">
            <summary>Sets the shim of BlockingQueue`1.TryTake(!0&amp; item)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimCustomEventFilter">
            <summary>Shim type of Akka.TestKit.Internal.CustomEventFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimCustomEventFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimCustomEventFilter.#ctor(Akka.TestKit.Internal.CustomEventFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimCustomEventFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimCustomEventFilter.AllInstances.FilterDescriptiveNameGet">
            <summary>Sets the shim of CustomEventFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimCustomEventFilter.AllInstances.IsMatchLogEvent">
            <summary>Sets the shim of CustomEventFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimCustomEventFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimCustomEventFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimCustomEventFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimCustomEventFilter.Bind(Akka.TestKit.IEventFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimCustomEventFilter.ConstructorPredicateOfLogEvent">
            <summary>Sets the shim of CustomEventFilter.CustomEventFilter(Predicate`1&lt;LogEvent&gt; predicate)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimCustomEventFilter.FilterDescriptiveNameGet">
            <summary>Sets the shim of CustomEventFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimCustomEventFilter.IsMatchLogEvent">
            <summary>Sets the shim of CustomEventFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimDebugFilter">
            <summary>Shim type of Akka.TestKit.Internal.DebugFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimDebugFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimDebugFilter.#ctor(Akka.TestKit.Internal.DebugFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimDebugFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimDebugFilter.AllInstances.FilterDescriptiveNameGet">
            <summary>Sets the shim of DebugFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimDebugFilter.AllInstances.IsMatchLogEvent">
            <summary>Sets the shim of DebugFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimDebugFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimDebugFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimDebugFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimDebugFilter.Bind(Akka.TestKit.IEventFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimDebugFilter.ConstructorIStringMatcherIStringMatcher">
            <summary>Sets the shim of DebugFilter.DebugFilter(IStringMatcher messageMatcher, IStringMatcher sourceMatcher)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimDebugFilter.FilterDescriptiveNameGet">
            <summary>Sets the shim of DebugFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimDebugFilter.IsMatchLogEvent">
            <summary>Sets the shim of DebugFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimErrorFilter">
            <summary>Shim type of Akka.TestKit.Internal.ErrorFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimErrorFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimErrorFilter.#ctor(Akka.TestKit.Internal.ErrorFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimErrorFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimErrorFilter.AllInstances.FilterDescriptiveNameGet">
            <summary>Sets the shim of ErrorFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimErrorFilter.AllInstances.IsMatchLogEvent">
            <summary>Sets the shim of ErrorFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimErrorFilter.AllInstances.IsMatchStringObjectException">
            <summary>Sets the shim of ErrorFilter.IsMatch(String logSource, Object errorMessage, Exception cause)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimErrorFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimErrorFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimErrorFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimErrorFilter.Bind(Akka.TestKit.IEventFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimErrorFilter.ConstructorIStringMatcherIStringMatcher">
            <summary>Sets the shim of ErrorFilter.ErrorFilter(IStringMatcher messageMatcher, IStringMatcher sourceMatcher)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimErrorFilter.ConstructorTypeIStringMatcherIStringMatcherBoolean">
            <summary>Sets the shim of ErrorFilter.ErrorFilter(Type exceptionType, IStringMatcher messageMatcher, IStringMatcher sourceMatcher, Boolean recurseInnerExceptions)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimErrorFilter.FilterDescriptiveNameGet">
            <summary>Sets the shim of ErrorFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimErrorFilter.IsMatchLogEvent">
            <summary>Sets the shim of ErrorFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimErrorFilter.IsMatchStringObjectException">
            <summary>Sets the shim of ErrorFilter.IsMatch(String logSource, Object errorMessage, Exception cause)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimEventFilterBase">
            <summary>Shim type of Akka.TestKit.Internal.EventFilterBase</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.#ctor(Akka.TestKit.Internal.EventFilterBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.AllInstances.ApplyLogEvent">
            <summary>Sets the shim of EventFilterBase.Apply(LogEvent logEvent)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.AllInstances.EventMatchedAddEventMatched">
            <summary>Sets the shim of EventFilterBase.add_EventMatched(EventMatched value)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.AllInstances.EventMatchedRemoveEventMatched">
            <summary>Sets the shim of EventFilterBase.remove_EventMatched(EventMatched value)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.AllInstances.InternalDoMatchStringObject">
            <summary>Sets the shim of EventFilterBase.InternalDoMatch(String src, Object msg)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.AllInstances.OnEventMatchedLogEvent">
            <summary>Sets the shim of EventFilterBase.OnEventMatched(LogEvent logEvent)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.AllInstances.ToString01">
            <summary>Sets the shim of EventFilterBase.ToString()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.ApplyLogEvent">
            <summary>Sets the shim of EventFilterBase.Apply(LogEvent logEvent)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.Bind(Akka.TestKit.IEventFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.ConstructorIStringMatcherIStringMatcher">
            <summary>Sets the shim of EventFilterBase.EventFilterBase(IStringMatcher messageMatcher, IStringMatcher sourceMatcher)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.EventMatchedAddEventMatched">
            <summary>Sets the shim of EventFilterBase.add_EventMatched(EventMatched value)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.EventMatchedRemoveEventMatched">
            <summary>Sets the shim of EventFilterBase.remove_EventMatched(EventMatched value)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.InternalDoMatchStringObject">
            <summary>Sets the shim of EventFilterBase.InternalDoMatch(String src, Object msg)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.OnEventMatchedLogEvent">
            <summary>Sets the shim of EventFilterBase.OnEventMatched(LogEvent logEvent)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimEventFilterBase.ToString">
            <summary>Sets the shim of EventFilterBase.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimInfoFilter">
            <summary>Shim type of Akka.TestKit.Internal.InfoFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInfoFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInfoFilter.#ctor(Akka.TestKit.Internal.InfoFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimInfoFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInfoFilter.AllInstances.FilterDescriptiveNameGet">
            <summary>Sets the shim of InfoFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInfoFilter.AllInstances.IsMatchLogEvent">
            <summary>Sets the shim of InfoFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInfoFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInfoFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInfoFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInfoFilter.Bind(Akka.TestKit.IEventFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInfoFilter.ConstructorIStringMatcherIStringMatcher">
            <summary>Sets the shim of InfoFilter.InfoFilter(IStringMatcher messageMatcher, IStringMatcher sourceMatcher)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInfoFilter.FilterDescriptiveNameGet">
            <summary>Sets the shim of InfoFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInfoFilter.IsMatchLogEvent">
            <summary>Sets the shim of InfoFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier">
            <summary>Shim type of Akka.TestKit.Internal.InternalEventFilterApplier</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.#ctor(Akka.TestKit.Internal.InternalEventFilterApplier)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AllInstances.AndGet">
            <summary>Sets the shim of InternalEventFilterApplier.get_And()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AllInstances.ExpectInt32Action">
            <summary>Sets the shim of InternalEventFilterApplier.Expect(Int32 expectedCount, Action action)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AllInstances.ExpectInt32TimeSpanAction">
            <summary>Sets the shim of InternalEventFilterApplier.Expect(Int32 expectedCount, TimeSpan timeout, Action action)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AllInstances.ExpectOf1Int32FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.Internal.InternalEventFilterApplier,System.Int32,System.Func{``0},``0})">
            <summary>Sets the shim of InternalEventFilterApplier.Expect(Int32 expectedCount, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AllInstances.ExpectOf1Int32TimeSpanFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.Internal.InternalEventFilterApplier,System.Int32,System.TimeSpan,System.Func{``0},``0})">
            <summary>Sets the shim of InternalEventFilterApplier.Expect(Int32 expectedCount, TimeSpan timeout, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AllInstances.ExpectOneAction">
            <summary>Sets the shim of InternalEventFilterApplier.ExpectOne(Action action)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AllInstances.ExpectOneOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.Internal.InternalEventFilterApplier,System.Func{``0},``0})">
            <summary>Sets the shim of InternalEventFilterApplier.ExpectOne(Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AllInstances.ExpectOneOf1TimeSpanFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.Internal.InternalEventFilterApplier,System.TimeSpan,System.Func{``0},``0})">
            <summary>Sets the shim of InternalEventFilterApplier.ExpectOne(TimeSpan timeout, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AllInstances.ExpectOneTimeSpanAction">
            <summary>Sets the shim of InternalEventFilterApplier.ExpectOne(TimeSpan timeout, Action action)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AllInstances.InternalExpectActionActorSystemInt32NullableOfTimeSpan">
            <summary>Sets the shim of InternalEventFilterApplier.InternalExpect(Action action, ActorSystem actorSystem, Int32 expectedCount, Nullable`1&lt;TimeSpan&gt; timeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AllInstances.Mute">
            <summary>Sets the shim of InternalEventFilterApplier.Mute()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AllInstances.MuteAction">
            <summary>Sets the shim of InternalEventFilterApplier.Mute(Action action)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AllInstances.MuteOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Akka.TestKit.Internal.InternalEventFilterApplier,System.Func{``0},``0})">
            <summary>Sets the shim of InternalEventFilterApplier.Mute(Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.AndGet">
            <summary>Sets the shim of InternalEventFilterApplier.get_And()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.Bind(Akka.TestKit.IEventFilterApplier)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.ConstructorTestKitBaseActorSystemIReadOnlyListOfEventFilterBase">
            <summary>Sets the shim of InternalEventFilterApplier.InternalEventFilterApplier(TestKitBase testkit, ActorSystem system, IReadOnlyList`1&lt;EventFilterBase&gt; filters)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.ExpectInt32Action">
            <summary>Sets the shim of InternalEventFilterApplier.Expect(Int32 expectedCount, Action action)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.ExpectInt32TimeSpanAction">
            <summary>Sets the shim of InternalEventFilterApplier.Expect(Int32 expectedCount, TimeSpan timeout, Action action)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.ExpectOf1Int32FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Func{``0},``0})">
            <summary>Sets the shim of InternalEventFilterApplier.Expect(Int32 expectedCount, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.ExpectOf1Int32TimeSpanFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.TimeSpan,System.Func{``0},``0})">
            <summary>Sets the shim of InternalEventFilterApplier.Expect(Int32 expectedCount, TimeSpan timeout, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.ExpectOneAction">
            <summary>Sets the shim of InternalEventFilterApplier.ExpectOne(Action action)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.ExpectOneOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>Sets the shim of InternalEventFilterApplier.ExpectOne(Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.ExpectOneOf1TimeSpanFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.TimeSpan,System.Func{``0},``0})">
            <summary>Sets the shim of InternalEventFilterApplier.ExpectOne(TimeSpan timeout, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.ExpectOneTimeSpanAction">
            <summary>Sets the shim of InternalEventFilterApplier.ExpectOne(TimeSpan timeout, Action action)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.GetMessageStringInt32">
            <summary>Sets the shim of InternalEventFilterApplier.GetMessageString(Int32 number)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.InternalExpectActionActorSystemInt32NullableOfTimeSpan">
            <summary>Sets the shim of InternalEventFilterApplier.InternalExpect(Action action, ActorSystem actorSystem, Int32 expectedCount, Nullable`1&lt;TimeSpan&gt; timeout)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.Mute">
            <summary>Sets the shim of InternalEventFilterApplier.Mute()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.MuteAction">
            <summary>Sets the shim of InternalEventFilterApplier.Mute(Action action)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalEventFilterApplier.MuteOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>Sets the shim of InternalEventFilterApplier.Mute(Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimInternalTestActor">
            <summary>Shim type of Akka.TestKit.Internal.InternalTestActor</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActor.#ctor(Akka.TestKit.Internal.InternalTestActor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimInternalTestActor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActor.AllInstances.PostStop">
            <summary>Sets the shim of InternalTestActor.PostStop()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActor.AllInstances.ReceiveObject">
            <summary>Sets the shim of InternalTestActor.Receive(Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActor.Bind(Akka.Actor.IInternalActor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActor.ConstructorITestActorQueueOfMessageEnvelope">
            <summary>Sets the shim of InternalTestActor.InternalTestActor(ITestActorQueue`1&lt;MessageEnvelope&gt; queue)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActor.PostStop">
            <summary>Sets the shim of InternalTestActor.PostStop()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActor.ReceiveObject">
            <summary>Sets the shim of InternalTestActor.Receive(Object message)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef">
            <summary>Shim type of Akka.TestKit.Internal.InternalTestActorRef</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.#ctor(Akka.TestKit.Internal.InternalTestActorRef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.AllInstances.NewActorCellActorSystemImplIInternalActorRefPropsMessageDispatcherIInternalActorRef">
            <summary>Sets the shim of InternalTestActorRef.NewActorCell(ActorSystemImpl system, IInternalActorRef self, Props props, MessageDispatcher dispatcher, IInternalActorRef supervisor)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.AllInstances.ReceiveObjectIActorRef">
            <summary>Sets the shim of InternalTestActorRef.Receive(Object message, IActorRef sender)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.AllInstances.ToString01">
            <summary>Sets the shim of InternalTestActorRef.ToString()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.AllInstances.UnderlyingActorGet">
            <summary>Sets the shim of InternalTestActorRef.get_UnderlyingActor()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.AllInstances.UnwatchIActorRef">
            <summary>Sets the shim of InternalTestActorRef.Unwatch(IActorRef subject)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.AllInstances.WatchIActorRef">
            <summary>Sets the shim of InternalTestActorRef.Watch(IActorRef subject)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.Bind(Akka.Actor.IActorRef)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.Bind(Akka.Actor.IActorRefScope)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.Bind(Akka.Actor.ICanTell)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.Bind(Akka.Actor.IInternalActorRef)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.Bind(Akka.Util.ISurrogated)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.Bind(System.IComparable{Akka.Actor.IActorRef})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.Bind(System.IEquatable{Akka.Actor.IActorRef})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.ConstructorActorSystemImplPropsMessageDispatcherMailboxTypeIInternalActorRefActorPath">
            <summary>Sets the shim of InternalTestActorRef.InternalTestActorRef(ActorSystemImpl system, Props props, MessageDispatcher dispatcher, MailboxType mailboxType, IInternalActorRef supervisor, ActorPath path)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.CreateActorSystemPropsIActorRefString">
            <summary>Sets the shim of InternalTestActorRef.Create(ActorSystem system, Props props, IActorRef supervisor, String name)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.CreateUniqueName">
            <summary>Sets the shim of InternalTestActorRef.CreateUniqueName()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.NewActorCellActorSystemImplIInternalActorRefPropsMessageDispatcherIInternalActorRef">
            <summary>Sets the shim of InternalTestActorRef.NewActorCell(ActorSystemImpl system, IInternalActorRef self, Props props, MessageDispatcher dispatcher, IInternalActorRef supervisor)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.ReceiveObjectIActorRef">
            <summary>Sets the shim of InternalTestActorRef.Receive(Object message, IActorRef sender)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.ShimInternalGetActor">
            <summary>Shim type of Akka.TestKit.Internal.InternalTestActorRef+InternalGetActor</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.ShimInternalGetActor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.ShimInternalGetActor.#ctor(Akka.TestKit.Internal.InternalTestActorRef.InternalGetActor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.ShimInternalGetActor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.ShimInternalGetActor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.ShimInternalGetActor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.ShimInternalGetActor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.ShimInternalGetActor.Bind(Akka.Actor.IAutoReceivedMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.ShimInternalGetActor.Bind(Akka.Actor.IPossiblyHarmful)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.ShimInternalGetActor.Constructor">
            <summary>Sets the shim of InternalGetActor.InternalGetActor()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.ShimInternalGetActor.StaticConstructor">
            <summary>Sets the shim of InternalGetActor.InternalGetActor()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.StaticConstructor">
            <summary>Sets the shim of InternalTestActorRef.InternalTestActorRef()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.ToString">
            <summary>Sets the shim of InternalTestActorRef.ToString()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.UnderlyingActorGet">
            <summary>Sets the shim of InternalTestActorRef.get_UnderlyingActor()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.UnwatchIActorRef">
            <summary>Sets the shim of InternalTestActorRef.Unwatch(IActorRef subject)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimInternalTestActorRef.WatchIActorRef">
            <summary>Sets the shim of InternalTestActorRef.Watch(IActorRef subject)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions">
            <summary>Shim type of Akka.TestKit.Internal.TimeSpanExtensions</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.EnsureIsPositiveFiniteTimeSpanString">
            <summary>Sets the shim of TimeSpanExtensions.EnsureIsPositiveFinite(TimeSpan timeSpan, String parameterName)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.IsInfiniteNullableOfTimeSpan">
            <summary>Sets the shim of TimeSpanExtensions.IsInfinite(Nullable`1&lt;TimeSpan&gt; timeSpan)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.IsInfiniteTimeSpan">
            <summary>Sets the shim of TimeSpanExtensions.IsInfinite(TimeSpan timeSpan)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.IsInfiniteTimeoutNullableOfTimeSpan">
            <summary>Sets the shim of TimeSpanExtensions.IsInfiniteTimeout(Nullable`1&lt;TimeSpan&gt; timeSpan)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.IsInfiniteTimeoutTimeSpan">
            <summary>Sets the shim of TimeSpanExtensions.IsInfiniteTimeout(TimeSpan timeSpan)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.IsPositiveFiniteNullableOfTimeSpan">
            <summary>Sets the shim of TimeSpanExtensions.IsPositiveFinite(Nullable`1&lt;TimeSpan&gt; timeSpan)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.IsPositiveFiniteTimeSpan">
            <summary>Sets the shim of TimeSpanExtensions.IsPositiveFinite(TimeSpan timeSpan)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.IsUndefinedNullableOfTimeSpan">
            <summary>Sets the shim of TimeSpanExtensions.IsUndefined(Nullable`1&lt;TimeSpan&gt; timeSpan)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.IsZeroNullableOfTimeSpan">
            <summary>Sets the shim of TimeSpanExtensions.IsZero(Nullable`1&lt;TimeSpan&gt; timeSpan)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.IsZeroTimeSpan">
            <summary>Sets the shim of TimeSpanExtensions.IsZero(TimeSpan timeSpan)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimTimeSpanExtensions.MinTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of TimeSpanExtensions.Min(TimeSpan a, Nullable`1&lt;TimeSpan&gt; b)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimWarningFilter">
            <summary>Shim type of Akka.TestKit.Internal.WarningFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimWarningFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimWarningFilter.#ctor(Akka.TestKit.Internal.WarningFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.ShimWarningFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimWarningFilter.AllInstances.FilterDescriptiveNameGet">
            <summary>Sets the shim of WarningFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimWarningFilter.AllInstances.IsMatchLogEvent">
            <summary>Sets the shim of WarningFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimWarningFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimWarningFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimWarningFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.ShimWarningFilter.Bind(Akka.TestKit.IEventFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimWarningFilter.ConstructorIStringMatcherIStringMatcher">
            <summary>Sets the shim of WarningFilter.WarningFilter(IStringMatcher messageMatcher, IStringMatcher sourceMatcher)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimWarningFilter.FilterDescriptiveNameGet">
            <summary>Sets the shim of WarningFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.ShimWarningFilter.IsMatchLogEvent">
            <summary>Sets the shim of WarningFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.StubBlockingCollectionTestActorQueue`1">
            <summary>Stub type of Akka.TestKit.Internal.BlockingCollectionTestActorQueue`1</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubBlockingCollectionTestActorQueue`1.#ctor(Akka.TestKit.Internal.BlockingQueue{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubBlockingCollectionTestActorQueue`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubBlockingCollectionTestActorQueue`1.InitializeStub">
            <summary>Initializes a new instance of type StubBlockingCollectionTestActorQueue</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubBlockingCollectionTestActorQueue`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubBlockingCollectionTestActorQueue`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.StubBlockingQueue`1">
            <summary>Stub type of Akka.TestKit.Internal.BlockingQueue`1</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubBlockingQueue`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubBlockingQueue`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubBlockingQueue`1.InitializeStub">
            <summary>Initializes a new instance of type StubBlockingQueue</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubBlockingQueue`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubBlockingQueue`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.StubCustomEventFilter">
            <summary>Stub type of Akka.TestKit.Internal.CustomEventFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubCustomEventFilter.#ctor(System.Predicate{Akka.Event.LogEvent})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubCustomEventFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubCustomEventFilter.FilterDescriptiveName">
            <summary>Sets the stub of CustomEventFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubCustomEventFilter.FilterDescriptiveNameGet">
            <summary>Sets the stub of CustomEventFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubCustomEventFilter.InitializeStub">
            <summary>Initializes a new instance of type StubCustomEventFilter</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubCustomEventFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubCustomEventFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubCustomEventFilter.IsMatch(Akka.Event.LogEvent)">
            <summary>Sets the stub of CustomEventFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubCustomEventFilter.IsMatchLogEvent">
            <summary>Sets the stub of CustomEventFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubCustomEventFilter.OnEventMatched(Akka.Event.LogEvent)">
            <summary>Sets the stub of EventFilterBase.OnEventMatched(LogEvent logEvent)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubCustomEventFilter.OnEventMatchedLogEvent">
            <summary>Sets the stub of EventFilterBase.OnEventMatched(LogEvent logEvent)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubCustomEventFilter.ToString">
            <summary>Sets the stub of EventFilterBase.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubCustomEventFilter.ToString01">
            <summary>Sets the stub of EventFilterBase.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.StubDebugFilter">
            <summary>Stub type of Akka.TestKit.Internal.DebugFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubDebugFilter.#ctor(Akka.TestKit.Internal.StringMatcher.IStringMatcher,Akka.TestKit.Internal.StringMatcher.IStringMatcher)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubDebugFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubDebugFilter.FilterDescriptiveName">
            <summary>Sets the stub of DebugFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubDebugFilter.FilterDescriptiveNameGet">
            <summary>Sets the stub of DebugFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubDebugFilter.InitializeStub">
            <summary>Initializes a new instance of type StubDebugFilter</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubDebugFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubDebugFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubDebugFilter.IsMatch(Akka.Event.LogEvent)">
            <summary>Sets the stub of DebugFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubDebugFilter.IsMatchLogEvent">
            <summary>Sets the stub of DebugFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubDebugFilter.OnEventMatched(Akka.Event.LogEvent)">
            <summary>Sets the stub of EventFilterBase.OnEventMatched(LogEvent logEvent)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubDebugFilter.OnEventMatchedLogEvent">
            <summary>Sets the stub of EventFilterBase.OnEventMatched(LogEvent logEvent)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubDebugFilter.ToString">
            <summary>Sets the stub of EventFilterBase.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubDebugFilter.ToString01">
            <summary>Sets the stub of EventFilterBase.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.StubErrorFilter">
            <summary>Stub type of Akka.TestKit.Internal.ErrorFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubErrorFilter.#ctor(Akka.TestKit.Internal.StringMatcher.IStringMatcher,Akka.TestKit.Internal.StringMatcher.IStringMatcher)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubErrorFilter.#ctor(System.Type,Akka.TestKit.Internal.StringMatcher.IStringMatcher,Akka.TestKit.Internal.StringMatcher.IStringMatcher,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubErrorFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubErrorFilter.FilterDescriptiveName">
            <summary>Sets the stub of ErrorFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubErrorFilter.FilterDescriptiveNameGet">
            <summary>Sets the stub of ErrorFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubErrorFilter.InitializeStub">
            <summary>Initializes a new instance of type StubErrorFilter</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubErrorFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubErrorFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubErrorFilter.IsMatch(Akka.Event.LogEvent)">
            <summary>Sets the stub of ErrorFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubErrorFilter.IsMatchLogEvent">
            <summary>Sets the stub of ErrorFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubErrorFilter.OnEventMatched(Akka.Event.LogEvent)">
            <summary>Sets the stub of EventFilterBase.OnEventMatched(LogEvent logEvent)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubErrorFilter.OnEventMatchedLogEvent">
            <summary>Sets the stub of EventFilterBase.OnEventMatched(LogEvent logEvent)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubErrorFilter.ToString">
            <summary>Sets the stub of EventFilterBase.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubErrorFilter.ToString01">
            <summary>Sets the stub of EventFilterBase.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.StubEventFilterBase">
            <summary>Stub type of Akka.TestKit.Internal.EventFilterBase</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubEventFilterBase.#ctor(Akka.TestKit.Internal.StringMatcher.IStringMatcher,Akka.TestKit.Internal.StringMatcher.IStringMatcher)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubEventFilterBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubEventFilterBase.FilterDescriptiveName">
            <summary>Sets the stub of EventFilterBase.get_FilterDescriptiveName()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubEventFilterBase.FilterDescriptiveNameGet">
            <summary>Sets the stub of EventFilterBase.get_FilterDescriptiveName()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubEventFilterBase.InitializeStub">
            <summary>Initializes a new instance of type StubEventFilterBase</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubEventFilterBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubEventFilterBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubEventFilterBase.IsMatch(Akka.Event.LogEvent)">
            <summary>Sets the stub of EventFilterBase.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubEventFilterBase.IsMatchLogEvent">
            <summary>Sets the stub of EventFilterBase.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubEventFilterBase.OnEventMatched(Akka.Event.LogEvent)">
            <summary>Sets the stub of EventFilterBase.OnEventMatched(LogEvent logEvent)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubEventFilterBase.OnEventMatchedLogEvent">
            <summary>Sets the stub of EventFilterBase.OnEventMatched(LogEvent logEvent)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubEventFilterBase.ToString">
            <summary>Sets the stub of EventFilterBase.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubEventFilterBase.ToString01">
            <summary>Sets the stub of EventFilterBase.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.StubITestActorQueue`1">
            <summary>Stub type of Akka.TestKit.Internal.ITestActorQueue`1</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubITestActorQueue`1.#ctor">
            <summary>Initializes a new instance of type StubITestActorQueue</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubITestActorQueue`1.Akka#TestKit#Internal#ITestActorQueueProducer{T}#Enqueue(`0)">
            <summary>Sets the stub of ITestActorQueueProducer`1.Enqueue(!0 item)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubITestActorQueue`1.Akka#TestKit#Internal#ITestActorQueue{T}#GetAll">
            <summary>Sets the stub of ITestActorQueue`1.GetAll()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubITestActorQueue`1.Akka#TestKit#Internal#ITestActorQueue{T}#ToList">
            <summary>Sets the stub of ITestActorQueue`1.ToList()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubITestActorQueue`1.EnqueueT0">
            <summary>Sets the stub of ITestActorQueueProducer`1.Enqueue(!0 item)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubITestActorQueue`1.GetAll">
            <summary>Sets the stub of ITestActorQueue`1.GetAll()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubITestActorQueue`1.ToList">
            <summary>Sets the stub of ITestActorQueue`1.ToList()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.StubITestActorQueueProducer`1">
            <summary>Stub type of Akka.TestKit.Internal.ITestActorQueueProducer`1</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubITestActorQueueProducer`1.#ctor">
            <summary>Initializes a new instance of type StubITestActorQueueProducer</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubITestActorQueueProducer`1.Akka#TestKit#Internal#ITestActorQueueProducer{T}#Enqueue(`0)">
            <summary>Sets the stub of ITestActorQueueProducer`1.Enqueue(!0 item)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubITestActorQueueProducer`1.EnqueueT0">
            <summary>Sets the stub of ITestActorQueueProducer`1.Enqueue(!0 item)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.StubInfoFilter">
            <summary>Stub type of Akka.TestKit.Internal.InfoFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInfoFilter.#ctor(Akka.TestKit.Internal.StringMatcher.IStringMatcher,Akka.TestKit.Internal.StringMatcher.IStringMatcher)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubInfoFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubInfoFilter.FilterDescriptiveName">
            <summary>Sets the stub of InfoFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInfoFilter.FilterDescriptiveNameGet">
            <summary>Sets the stub of InfoFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInfoFilter.InitializeStub">
            <summary>Initializes a new instance of type StubInfoFilter</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubInfoFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubInfoFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInfoFilter.IsMatch(Akka.Event.LogEvent)">
            <summary>Sets the stub of InfoFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInfoFilter.IsMatchLogEvent">
            <summary>Sets the stub of InfoFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInfoFilter.OnEventMatched(Akka.Event.LogEvent)">
            <summary>Sets the stub of EventFilterBase.OnEventMatched(LogEvent logEvent)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInfoFilter.OnEventMatchedLogEvent">
            <summary>Sets the stub of EventFilterBase.OnEventMatched(LogEvent logEvent)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInfoFilter.ToString">
            <summary>Sets the stub of EventFilterBase.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInfoFilter.ToString01">
            <summary>Sets the stub of EventFilterBase.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.StubInternalEventFilterApplier">
            <summary>Stub type of Akka.TestKit.Internal.InternalEventFilterApplier</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalEventFilterApplier.#ctor(Akka.TestKit.TestKitBase,Akka.Actor.ActorSystem,System.Collections.Generic.IReadOnlyList{Akka.TestKit.Internal.EventFilterBase})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubInternalEventFilterApplier.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalEventFilterApplier.InitializeStub">
            <summary>Initializes a new instance of type StubInternalEventFilterApplier</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubInternalEventFilterApplier.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubInternalEventFilterApplier.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.StubInternalTestActor">
            <summary>Stub type of Akka.TestKit.Internal.InternalTestActor</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalTestActor.#ctor(Akka.TestKit.Internal.ITestActorQueue{Akka.TestKit.MessageEnvelope})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalTestActor.AroundPostRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.AroundPostRestart(Exception cause, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInternalTestActor.AroundPostRestartExceptionObject">
            <summary>Sets the stub of ActorBase.AroundPostRestart(Exception cause, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalTestActor.AroundPostStop">
            <summary>Sets the stub of ActorBase.AroundPostStop()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInternalTestActor.AroundPostStop01">
            <summary>Sets the stub of ActorBase.AroundPostStop()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalTestActor.AroundPreRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.AroundPreRestart(Exception cause, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInternalTestActor.AroundPreRestartExceptionObject">
            <summary>Sets the stub of ActorBase.AroundPreRestart(Exception cause, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalTestActor.AroundPreStart">
            <summary>Sets the stub of ActorBase.AroundPreStart()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInternalTestActor.AroundPreStart01">
            <summary>Sets the stub of ActorBase.AroundPreStart()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalTestActor.AroundReceive(Akka.Actor.Receive,System.Object)">
            <summary>Sets the stub of ActorBase.AroundReceive(Receive receive, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInternalTestActor.AroundReceiveReceiveObject">
            <summary>Sets the stub of ActorBase.AroundReceive(Receive receive, Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubInternalTestActor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalTestActor.InitializeStub">
            <summary>Initializes a new instance of type StubInternalTestActor</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubInternalTestActor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubInternalTestActor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalTestActor.PostRestart(System.Exception)">
            <summary>Sets the stub of ActorBase.PostRestart(Exception reason)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInternalTestActor.PostRestartException">
            <summary>Sets the stub of ActorBase.PostRestart(Exception reason)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalTestActor.PostStop">
            <summary>Sets the stub of InternalTestActor.PostStop()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInternalTestActor.PostStop01">
            <summary>Sets the stub of InternalTestActor.PostStop()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalTestActor.PreRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.PreRestart(Exception reason, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInternalTestActor.PreRestartExceptionObject">
            <summary>Sets the stub of ActorBase.PreRestart(Exception reason, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalTestActor.PreStart">
            <summary>Sets the stub of ActorBase.PreStart()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInternalTestActor.PreStart01">
            <summary>Sets the stub of ActorBase.PreStart()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalTestActor.Receive(System.Object)">
            <summary>Sets the stub of InternalTestActor.Receive(Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInternalTestActor.ReceiveObject">
            <summary>Sets the stub of InternalTestActor.Receive(Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalTestActor.SupervisorStrategy">
            <summary>Sets the stub of ActorBase.SupervisorStrategy()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInternalTestActor.SupervisorStrategy01">
            <summary>Sets the stub of ActorBase.SupervisorStrategy()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubInternalTestActor.Unhandled(System.Object)">
            <summary>Sets the stub of ActorBase.Unhandled(Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubInternalTestActor.UnhandledObject">
            <summary>Sets the stub of ActorBase.Unhandled(Object message)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.Fakes.StubWarningFilter">
            <summary>Stub type of Akka.TestKit.Internal.WarningFilter</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubWarningFilter.#ctor(Akka.TestKit.Internal.StringMatcher.IStringMatcher,Akka.TestKit.Internal.StringMatcher.IStringMatcher)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubWarningFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubWarningFilter.FilterDescriptiveName">
            <summary>Sets the stub of WarningFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubWarningFilter.FilterDescriptiveNameGet">
            <summary>Sets the stub of WarningFilter.get_FilterDescriptiveName()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubWarningFilter.InitializeStub">
            <summary>Initializes a new instance of type StubWarningFilter</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubWarningFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.Fakes.StubWarningFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubWarningFilter.IsMatch(Akka.Event.LogEvent)">
            <summary>Sets the stub of WarningFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubWarningFilter.IsMatchLogEvent">
            <summary>Sets the stub of WarningFilter.IsMatch(LogEvent evt)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubWarningFilter.OnEventMatched(Akka.Event.LogEvent)">
            <summary>Sets the stub of EventFilterBase.OnEventMatched(LogEvent logEvent)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubWarningFilter.OnEventMatchedLogEvent">
            <summary>Sets the stub of EventFilterBase.OnEventMatched(LogEvent logEvent)</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.Fakes.StubWarningFilter.ToString">
            <summary>Sets the stub of EventFilterBase.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.Fakes.StubWarningFilter.ToString01">
            <summary>Sets the stub of EventFilterBase.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.ShimContainsString">
            <summary>Shim type of Akka.TestKit.Internal.StringMatcher.ContainsString</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimContainsString.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimContainsString.#ctor(Akka.TestKit.Internal.StringMatcher.ContainsString)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.ShimContainsString.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimContainsString.AllInstances.IsMatchString">
            <summary>Sets the shim of ContainsString.IsMatch(String s)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimContainsString.AllInstances.ToString01">
            <summary>Sets the shim of ContainsString.ToString()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimContainsString.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimContainsString.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimContainsString.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimContainsString.Bind(Akka.TestKit.Internal.StringMatcher.IStringMatcher)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimContainsString.ConstructorString">
            <summary>Sets the shim of ContainsString.ContainsString(String part)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimContainsString.IsMatchString">
            <summary>Sets the shim of ContainsString.IsMatch(String s)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimContainsString.ToString">
            <summary>Sets the shim of ContainsString.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsString">
            <summary>Shim type of Akka.TestKit.Internal.StringMatcher.EqualsString</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsString.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsString.#ctor(Akka.TestKit.Internal.StringMatcher.EqualsString)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsString.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsString.AllInstances.IsMatchString">
            <summary>Sets the shim of EqualsString.IsMatch(String s)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsString.AllInstances.ToString01">
            <summary>Sets the shim of EqualsString.ToString()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsString.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsString.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsString.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsString.Bind(Akka.TestKit.Internal.StringMatcher.IStringMatcher)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsString.ConstructorString">
            <summary>Sets the shim of EqualsString.EqualsString(String s)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsString.IsMatchString">
            <summary>Sets the shim of EqualsString.IsMatch(String s)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsString.ToString">
            <summary>Sets the shim of EqualsString.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsStringAndPathMatcher">
            <summary>Shim type of Akka.TestKit.Internal.StringMatcher.EqualsStringAndPathMatcher</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsStringAndPathMatcher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsStringAndPathMatcher.#ctor(Akka.TestKit.Internal.StringMatcher.EqualsStringAndPathMatcher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsStringAndPathMatcher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsStringAndPathMatcher.AllInstances.IsMatchString">
            <summary>Sets the shim of EqualsStringAndPathMatcher.IsMatch(String path)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsStringAndPathMatcher.AllInstances.ToString01">
            <summary>Sets the shim of EqualsStringAndPathMatcher.ToString()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsStringAndPathMatcher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsStringAndPathMatcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsStringAndPathMatcher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsStringAndPathMatcher.Bind(Akka.TestKit.Internal.StringMatcher.IStringMatcher)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsStringAndPathMatcher.ConstructorStringBoolean">
            <summary>Sets the shim of EqualsStringAndPathMatcher.EqualsStringAndPathMatcher(String path, Boolean canBeRelative)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsStringAndPathMatcher.IsMatchString">
            <summary>Sets the shim of EqualsStringAndPathMatcher.IsMatch(String path)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimEqualsStringAndPathMatcher.ToString">
            <summary>Sets the shim of EqualsStringAndPathMatcher.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll">
            <summary>Shim type of Akka.TestKit.Internal.StringMatcher.MatchesAll</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll.#ctor(Akka.TestKit.Internal.StringMatcher.MatchesAll)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll.AllInstances.IsMatchString">
            <summary>Sets the shim of MatchesAll.IsMatch(String s)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll.AllInstances.ToString01">
            <summary>Sets the shim of MatchesAll.ToString()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll.Bind(Akka.TestKit.Internal.StringMatcher.IStringMatcher)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll.Constructor">
            <summary>Sets the shim of MatchesAll.MatchesAll()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll.InstanceGet">
            <summary>Sets the shim of MatchesAll.get_Instance()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll.IsMatchString">
            <summary>Sets the shim of MatchesAll.IsMatch(String s)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll.StaticConstructor">
            <summary>Sets the shim of MatchesAll.MatchesAll()</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimMatchesAll.ToString">
            <summary>Sets the shim of MatchesAll.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.ShimPredicateMatcher">
            <summary>Shim type of Akka.TestKit.Internal.StringMatcher.PredicateMatcher</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimPredicateMatcher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimPredicateMatcher.#ctor(Akka.TestKit.Internal.StringMatcher.PredicateMatcher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.ShimPredicateMatcher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimPredicateMatcher.AllInstances.IsMatchString">
            <summary>Sets the shim of PredicateMatcher.IsMatch(String s)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimPredicateMatcher.AllInstances.ToString01">
            <summary>Sets the shim of PredicateMatcher.ToString()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimPredicateMatcher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimPredicateMatcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimPredicateMatcher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimPredicateMatcher.Bind(Akka.TestKit.Internal.StringMatcher.IStringMatcher)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimPredicateMatcher.ConstructorPredicateOfStringString">
            <summary>Sets the shim of PredicateMatcher.PredicateMatcher(Predicate`1&lt;String&gt; predicate, String hint)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimPredicateMatcher.IsMatchString">
            <summary>Sets the shim of PredicateMatcher.IsMatch(String s)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimPredicateMatcher.ToString">
            <summary>Sets the shim of PredicateMatcher.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.ShimRegexMatcher">
            <summary>Shim type of Akka.TestKit.Internal.StringMatcher.RegexMatcher</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimRegexMatcher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimRegexMatcher.#ctor(Akka.TestKit.Internal.StringMatcher.RegexMatcher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.ShimRegexMatcher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimRegexMatcher.AllInstances.IsMatchString">
            <summary>Sets the shim of RegexMatcher.IsMatch(String s)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimRegexMatcher.AllInstances.ToString01">
            <summary>Sets the shim of RegexMatcher.ToString()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimRegexMatcher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimRegexMatcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimRegexMatcher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimRegexMatcher.Bind(Akka.TestKit.Internal.StringMatcher.IStringMatcher)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimRegexMatcher.ConstructorRegex">
            <summary>Sets the shim of RegexMatcher.RegexMatcher(Regex regex)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimRegexMatcher.IsMatchString">
            <summary>Sets the shim of RegexMatcher.IsMatch(String s)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimRegexMatcher.ToString">
            <summary>Sets the shim of RegexMatcher.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.ShimStartsWithString">
            <summary>Shim type of Akka.TestKit.Internal.StringMatcher.StartsWithString</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimStartsWithString.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimStartsWithString.#ctor(Akka.TestKit.Internal.StringMatcher.StartsWithString)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.ShimStartsWithString.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimStartsWithString.AllInstances.IsMatchString">
            <summary>Sets the shim of StartsWithString.IsMatch(String s)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimStartsWithString.AllInstances.ToString01">
            <summary>Sets the shim of StartsWithString.ToString()</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimStartsWithString.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimStartsWithString.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimStartsWithString.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.ShimStartsWithString.Bind(Akka.TestKit.Internal.StringMatcher.IStringMatcher)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimStartsWithString.ConstructorString">
            <summary>Sets the shim of StartsWithString.StartsWithString(String start)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimStartsWithString.IsMatchString">
            <summary>Sets the shim of StartsWithString.IsMatch(String s)</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.ShimStartsWithString.ToString">
            <summary>Sets the shim of StartsWithString.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.StubContainsString">
            <summary>Stub type of Akka.TestKit.Internal.StringMatcher.ContainsString</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubContainsString.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubContainsString.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubContainsString.InitializeStub">
            <summary>Initializes a new instance of type StubContainsString</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubContainsString.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubContainsString.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubContainsString.ToString">
            <summary>Sets the stub of ContainsString.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.StringMatcher.Fakes.StubContainsString.ToString01">
            <summary>Sets the stub of ContainsString.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsString">
            <summary>Stub type of Akka.TestKit.Internal.StringMatcher.EqualsString</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsString.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsString.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsString.InitializeStub">
            <summary>Initializes a new instance of type StubEqualsString</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsString.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsString.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsString.ToString">
            <summary>Sets the stub of EqualsString.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsString.ToString01">
            <summary>Sets the stub of EqualsString.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsStringAndPathMatcher">
            <summary>Stub type of Akka.TestKit.Internal.StringMatcher.EqualsStringAndPathMatcher</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsStringAndPathMatcher.#ctor(System.String,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsStringAndPathMatcher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsStringAndPathMatcher.InitializeStub">
            <summary>Initializes a new instance of type StubEqualsStringAndPathMatcher</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsStringAndPathMatcher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsStringAndPathMatcher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsStringAndPathMatcher.ToString">
            <summary>Sets the stub of EqualsStringAndPathMatcher.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.StringMatcher.Fakes.StubEqualsStringAndPathMatcher.ToString01">
            <summary>Sets the stub of EqualsStringAndPathMatcher.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.StubIStringMatcher">
            <summary>Stub type of Akka.TestKit.Internal.StringMatcher.IStringMatcher</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubIStringMatcher.#ctor">
            <summary>Initializes a new instance of type StubIStringMatcher</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubIStringMatcher.Akka#TestKit#Internal#StringMatcher#IStringMatcher#IsMatch(System.String)">
            <summary>Sets the stub of IStringMatcher.IsMatch(String s)</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.StringMatcher.Fakes.StubIStringMatcher.IsMatchString">
            <summary>Sets the stub of IStringMatcher.IsMatch(String s)</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.StubPredicateMatcher">
            <summary>Stub type of Akka.TestKit.Internal.StringMatcher.PredicateMatcher</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubPredicateMatcher.#ctor(System.Predicate{System.String},System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubPredicateMatcher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubPredicateMatcher.InitializeStub">
            <summary>Initializes a new instance of type StubPredicateMatcher</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubPredicateMatcher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubPredicateMatcher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubPredicateMatcher.ToString">
            <summary>Sets the stub of PredicateMatcher.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.StringMatcher.Fakes.StubPredicateMatcher.ToString01">
            <summary>Sets the stub of PredicateMatcher.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.StubRegexMatcher">
            <summary>Stub type of Akka.TestKit.Internal.StringMatcher.RegexMatcher</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubRegexMatcher.#ctor(System.Text.RegularExpressions.Regex)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubRegexMatcher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubRegexMatcher.InitializeStub">
            <summary>Initializes a new instance of type StubRegexMatcher</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubRegexMatcher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubRegexMatcher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubRegexMatcher.ToString">
            <summary>Sets the stub of RegexMatcher.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.StringMatcher.Fakes.StubRegexMatcher.ToString01">
            <summary>Sets the stub of RegexMatcher.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.Internal.StringMatcher.Fakes.StubStartsWithString">
            <summary>Stub type of Akka.TestKit.Internal.StringMatcher.StartsWithString</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubStartsWithString.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubStartsWithString.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubStartsWithString.InitializeStub">
            <summary>Initializes a new instance of type StubStartsWithString</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubStartsWithString.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.Internal.StringMatcher.Fakes.StubStartsWithString.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.Internal.StringMatcher.Fakes.StubStartsWithString.ToString">
            <summary>Sets the stub of StartsWithString.ToString()</summary>
        </member>
        <member name="F:Akka.TestKit.Internal.StringMatcher.Fakes.StubStartsWithString.ToString01">
            <summary>Sets the stub of StartsWithString.ToString()</summary>
        </member>
        <member name="T:Akka.TestKit.TestActors.Fakes.ShimBlackHoleActor">
            <summary>Shim type of Akka.TestKit.TestActors.BlackHoleActor</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimBlackHoleActor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimBlackHoleActor.#ctor(Akka.TestKit.TestActors.BlackHoleActor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.TestActors.Fakes.ShimBlackHoleActor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.ShimBlackHoleActor.AllInstances.ReceiveObject">
            <summary>Sets the shim of BlackHoleActor.Receive(Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimBlackHoleActor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimBlackHoleActor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.ShimBlackHoleActor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimBlackHoleActor.Bind(Akka.Actor.IInternalActor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.ShimBlackHoleActor.Constructor">
            <summary>Sets the shim of BlackHoleActor.BlackHoleActor()</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.ShimBlackHoleActor.PropsGet">
            <summary>Sets the shim of BlackHoleActor.get_Props()</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.ShimBlackHoleActor.ReceiveObject">
            <summary>Sets the shim of BlackHoleActor.Receive(Object message)</summary>
        </member>
        <member name="T:Akka.TestKit.TestActors.Fakes.ShimEchoActor">
            <summary>Shim type of Akka.TestKit.TestActors.EchoActor</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimEchoActor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimEchoActor.#ctor(Akka.TestKit.TestActors.EchoActor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.TestActors.Fakes.ShimEchoActor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimEchoActor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimEchoActor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.ShimEchoActor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimEchoActor.Bind(Akka.Actor.IInternalActor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimEchoActor.Bind(Akka.Actor.Internal.IInitializableActor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.ShimEchoActor.ConstructorTestKitBaseBoolean">
            <summary>Sets the shim of EchoActor.EchoActor(TestKitBase testkit, Boolean echoBackToSenderAsWell)</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.ShimEchoActor.PropsTestKitBaseBoolean">
            <summary>Sets the shim of EchoActor.Props(TestKitBase testkit, Boolean echoBackToSenderAsWell)</summary>
        </member>
        <member name="T:Akka.TestKit.TestActors.Fakes.ShimForwardActor">
            <summary>Shim type of Akka.TestKit.TestActors.ForwardActor</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimForwardActor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimForwardActor.#ctor(Akka.TestKit.TestActors.ForwardActor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.TestActors.Fakes.ShimForwardActor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimForwardActor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimForwardActor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.ShimForwardActor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimForwardActor.Bind(Akka.Actor.IInternalActor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.ShimForwardActor.Bind(Akka.Actor.Internal.IInitializableActor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.ShimForwardActor.ConstructorIActorRef">
            <summary>Sets the shim of ForwardActor.ForwardActor(IActorRef target)</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.ShimForwardActor.PropsIActorRef">
            <summary>Sets the shim of ForwardActor.Props(IActorRef target)</summary>
        </member>
        <member name="T:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor">
            <summary>Stub type of Akka.TestKit.TestActors.BlackHoleActor</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.AroundPostRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.AroundPostRestart(Exception cause, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.AroundPostRestartExceptionObject">
            <summary>Sets the stub of ActorBase.AroundPostRestart(Exception cause, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.AroundPostStop">
            <summary>Sets the stub of ActorBase.AroundPostStop()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.AroundPostStop01">
            <summary>Sets the stub of ActorBase.AroundPostStop()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.AroundPreRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.AroundPreRestart(Exception cause, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.AroundPreRestartExceptionObject">
            <summary>Sets the stub of ActorBase.AroundPreRestart(Exception cause, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.AroundPreStart">
            <summary>Sets the stub of ActorBase.AroundPreStart()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.AroundPreStart01">
            <summary>Sets the stub of ActorBase.AroundPreStart()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.AroundReceive(Akka.Actor.Receive,System.Object)">
            <summary>Sets the stub of ActorBase.AroundReceive(Receive receive, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.AroundReceiveReceiveObject">
            <summary>Sets the stub of ActorBase.AroundReceive(Receive receive, Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.InitializeStub">
            <summary>Initializes a new instance of type StubBlackHoleActor</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.PostRestart(System.Exception)">
            <summary>Sets the stub of ActorBase.PostRestart(Exception reason)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.PostRestartException">
            <summary>Sets the stub of ActorBase.PostRestart(Exception reason)</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.PostStop">
            <summary>Sets the stub of ActorBase.PostStop()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.PostStop01">
            <summary>Sets the stub of ActorBase.PostStop()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.PreRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.PreRestart(Exception reason, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.PreRestartExceptionObject">
            <summary>Sets the stub of ActorBase.PreRestart(Exception reason, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.PreStart">
            <summary>Sets the stub of ActorBase.PreStart()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.PreStart01">
            <summary>Sets the stub of ActorBase.PreStart()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.Receive(System.Object)">
            <summary>Sets the stub of BlackHoleActor.Receive(Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.ReceiveObject">
            <summary>Sets the stub of BlackHoleActor.Receive(Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.SupervisorStrategy">
            <summary>Sets the stub of ActorBase.SupervisorStrategy()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.SupervisorStrategy01">
            <summary>Sets the stub of ActorBase.SupervisorStrategy()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.Unhandled(System.Object)">
            <summary>Sets the stub of ActorBase.Unhandled(Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubBlackHoleActor.UnhandledObject">
            <summary>Sets the stub of ActorBase.Unhandled(Object message)</summary>
        </member>
        <member name="T:Akka.TestKit.TestActors.Fakes.StubEchoActor">
            <summary>Stub type of Akka.TestKit.TestActors.EchoActor</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubEchoActor.#ctor(Akka.TestKit.TestKitBase,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubEchoActor.AroundPostRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.AroundPostRestart(Exception cause, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubEchoActor.AroundPostRestartExceptionObject">
            <summary>Sets the stub of ActorBase.AroundPostRestart(Exception cause, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubEchoActor.AroundPostStop">
            <summary>Sets the stub of ActorBase.AroundPostStop()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubEchoActor.AroundPostStop01">
            <summary>Sets the stub of ActorBase.AroundPostStop()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubEchoActor.AroundPreRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.AroundPreRestart(Exception cause, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubEchoActor.AroundPreRestartExceptionObject">
            <summary>Sets the stub of ActorBase.AroundPreRestart(Exception cause, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubEchoActor.AroundPreStart">
            <summary>Sets the stub of ActorBase.AroundPreStart()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubEchoActor.AroundPreStart01">
            <summary>Sets the stub of ActorBase.AroundPreStart()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubEchoActor.AroundReceive(Akka.Actor.Receive,System.Object)">
            <summary>Sets the stub of ActorBase.AroundReceive(Receive receive, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubEchoActor.AroundReceiveReceiveObject">
            <summary>Sets the stub of ActorBase.AroundReceive(Receive receive, Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.StubEchoActor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubEchoActor.InitializeStub">
            <summary>Initializes a new instance of type StubEchoActor</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.StubEchoActor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.StubEchoActor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubEchoActor.PostRestart(System.Exception)">
            <summary>Sets the stub of ActorBase.PostRestart(Exception reason)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubEchoActor.PostRestartException">
            <summary>Sets the stub of ActorBase.PostRestart(Exception reason)</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubEchoActor.PostStop">
            <summary>Sets the stub of ActorBase.PostStop()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubEchoActor.PostStop01">
            <summary>Sets the stub of ActorBase.PostStop()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubEchoActor.PreRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.PreRestart(Exception reason, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubEchoActor.PreRestartExceptionObject">
            <summary>Sets the stub of ActorBase.PreRestart(Exception reason, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubEchoActor.PreStart">
            <summary>Sets the stub of ActorBase.PreStart()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubEchoActor.PreStart01">
            <summary>Sets the stub of ActorBase.PreStart()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubEchoActor.SupervisorStrategy">
            <summary>Sets the stub of ActorBase.SupervisorStrategy()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubEchoActor.SupervisorStrategy01">
            <summary>Sets the stub of ActorBase.SupervisorStrategy()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubEchoActor.Unhandled(System.Object)">
            <summary>Sets the stub of ActorBase.Unhandled(Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubEchoActor.UnhandledObject">
            <summary>Sets the stub of ActorBase.Unhandled(Object message)</summary>
        </member>
        <member name="T:Akka.TestKit.TestActors.Fakes.StubForwardActor">
            <summary>Stub type of Akka.TestKit.TestActors.ForwardActor</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubForwardActor.#ctor(Akka.Actor.IActorRef)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubForwardActor.AroundPostRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.AroundPostRestart(Exception cause, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubForwardActor.AroundPostRestartExceptionObject">
            <summary>Sets the stub of ActorBase.AroundPostRestart(Exception cause, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubForwardActor.AroundPostStop">
            <summary>Sets the stub of ActorBase.AroundPostStop()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubForwardActor.AroundPostStop01">
            <summary>Sets the stub of ActorBase.AroundPostStop()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubForwardActor.AroundPreRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.AroundPreRestart(Exception cause, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubForwardActor.AroundPreRestartExceptionObject">
            <summary>Sets the stub of ActorBase.AroundPreRestart(Exception cause, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubForwardActor.AroundPreStart">
            <summary>Sets the stub of ActorBase.AroundPreStart()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubForwardActor.AroundPreStart01">
            <summary>Sets the stub of ActorBase.AroundPreStart()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubForwardActor.AroundReceive(Akka.Actor.Receive,System.Object)">
            <summary>Sets the stub of ActorBase.AroundReceive(Receive receive, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubForwardActor.AroundReceiveReceiveObject">
            <summary>Sets the stub of ActorBase.AroundReceive(Receive receive, Object message)</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.StubForwardActor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubForwardActor.InitializeStub">
            <summary>Initializes a new instance of type StubForwardActor</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.StubForwardActor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Akka.TestKit.TestActors.Fakes.StubForwardActor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubForwardActor.PostRestart(System.Exception)">
            <summary>Sets the stub of ActorBase.PostRestart(Exception reason)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubForwardActor.PostRestartException">
            <summary>Sets the stub of ActorBase.PostRestart(Exception reason)</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubForwardActor.PostStop">
            <summary>Sets the stub of ActorBase.PostStop()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubForwardActor.PostStop01">
            <summary>Sets the stub of ActorBase.PostStop()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubForwardActor.PreRestart(System.Exception,System.Object)">
            <summary>Sets the stub of ActorBase.PreRestart(Exception reason, Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubForwardActor.PreRestartExceptionObject">
            <summary>Sets the stub of ActorBase.PreRestart(Exception reason, Object message)</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubForwardActor.PreStart">
            <summary>Sets the stub of ActorBase.PreStart()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubForwardActor.PreStart01">
            <summary>Sets the stub of ActorBase.PreStart()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubForwardActor.SupervisorStrategy">
            <summary>Sets the stub of ActorBase.SupervisorStrategy()</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubForwardActor.SupervisorStrategy01">
            <summary>Sets the stub of ActorBase.SupervisorStrategy()</summary>
        </member>
        <member name="M:Akka.TestKit.TestActors.Fakes.StubForwardActor.Unhandled(System.Object)">
            <summary>Sets the stub of ActorBase.Unhandled(Object message)</summary>
        </member>
        <member name="F:Akka.TestKit.TestActors.Fakes.StubForwardActor.UnhandledObject">
            <summary>Sets the stub of ActorBase.Unhandled(Object message)</summary>
        </member>
        <member name="T:Akka.TestKit.TestEvent.Fakes.ShimMute">
            <summary>Shim type of Akka.TestKit.TestEvent.Mute</summary>
        </member>
        <member name="M:Akka.TestKit.TestEvent.Fakes.ShimMute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.TestEvent.Fakes.ShimMute.#ctor(Akka.TestKit.TestEvent.Mute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.TestEvent.Fakes.ShimMute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.TestEvent.Fakes.ShimMute.AllInstances.FiltersGet">
            <summary>Sets the shim of Mute.get_Filters()</summary>
        </member>
        <member name="M:Akka.TestKit.TestEvent.Fakes.ShimMute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.TestEvent.Fakes.ShimMute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.TestEvent.Fakes.ShimMute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.TestEvent.Fakes.ShimMute.Bind(Akka.Actor.INoSerializationVerificationNeeded)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.TestEvent.Fakes.ShimMute.ConstructorEventFilterBaseArray">
            <summary>Sets the shim of Mute.Mute(EventFilterBase[] filters)</summary>
        </member>
        <member name="P:Akka.TestKit.TestEvent.Fakes.ShimMute.ConstructorIReadOnlyCollectionOfEventFilterBase">
            <summary>Sets the shim of Mute.Mute(IReadOnlyCollection`1&lt;EventFilterBase&gt; filters)</summary>
        </member>
        <member name="P:Akka.TestKit.TestEvent.Fakes.ShimMute.FiltersGet">
            <summary>Sets the shim of Mute.get_Filters()</summary>
        </member>
        <member name="T:Akka.TestKit.TestEvent.Fakes.ShimUnmute">
            <summary>Shim type of Akka.TestKit.TestEvent.Unmute</summary>
        </member>
        <member name="M:Akka.TestKit.TestEvent.Fakes.ShimUnmute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Akka.TestKit.TestEvent.Fakes.ShimUnmute.#ctor(Akka.TestKit.TestEvent.Unmute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Akka.TestKit.TestEvent.Fakes.ShimUnmute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Akka.TestKit.TestEvent.Fakes.ShimUnmute.AllInstances.FiltersGet">
            <summary>Sets the shim of Unmute.get_Filters()</summary>
        </member>
        <member name="M:Akka.TestKit.TestEvent.Fakes.ShimUnmute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.TestEvent.Fakes.ShimUnmute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Akka.TestKit.TestEvent.Fakes.ShimUnmute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Akka.TestKit.TestEvent.Fakes.ShimUnmute.Bind(Akka.Actor.INoSerializationVerificationNeeded)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Akka.TestKit.TestEvent.Fakes.ShimUnmute.ConstructorEventFilterBaseArray">
            <summary>Sets the shim of Unmute.Unmute(EventFilterBase[] filters)</summary>
        </member>
        <member name="P:Akka.TestKit.TestEvent.Fakes.ShimUnmute.ConstructorIReadOnlyCollectionOfEventFilterBase">
            <summary>Sets the shim of Unmute.Unmute(IReadOnlyCollection`1&lt;EventFilterBase&gt; filters)</summary>
        </member>
        <member name="P:Akka.TestKit.TestEvent.Fakes.ShimUnmute.FiltersGet">
            <summary>Sets the shim of Unmute.get_Filters()</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.AkkaTestKitDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Akka.TestKit</summary>
        </member>
    </members>
</doc>
